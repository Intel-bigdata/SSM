/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.smartdata.model;

/**
 * This class is used between compression scheduler and action. It maintains CompressionFileState
 * generated by CompressionAction and the temp file path for CompressionAction to store the
 * compressed file. After CompressionScheduler gets this class, it will replace the original file
 * with the temp compressed file and then update the metastore with CompressionFileState.
 */
public class CompressionFileInfo {
  private boolean needReplace = false;
  private String tempPath = null;
  private CompressionFileState compressionFileState = null;

  public CompressionFileInfo(boolean needReplace, CompressionFileState compressionFileState) {
    this(needReplace, null, compressionFileState);
  }

  public CompressionFileInfo(boolean needReplace, String tempPath,
      CompressionFileState compressionFileState) {
    this.needReplace = needReplace;
    this.tempPath = tempPath;
    this.compressionFileState = compressionFileState;
  }

  public void setCompressionFileState(CompressionFileState compressionFileState) {
    this.compressionFileState = compressionFileState;
  }

  public void setTempPath(String tempPath) {
    this.tempPath = tempPath;
  }

  public void setNeedReplace(boolean needReplace) {
    this.needReplace = needReplace;
  }

  public CompressionFileState getCompressionFileState() {
    return compressionFileState;
  }

  public String getTempPath() {
    return tempPath;
  }

  public boolean needReplace() {
    return needReplace;
  }
}
