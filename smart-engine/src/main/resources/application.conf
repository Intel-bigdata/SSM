akka {
  logger-startup-timeout = 30s

  log-dead-letters = on

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  loglevel = "INFO"

  stdout-loglevel = "OFF"

  actor {
    creation-timeout = 60s
    provider = "akka.remote.RemoteActorRefProvider"
    default-mailbox {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    }
    default-dispatcher {
      throughput = 10
      fork-join-executor {
        parallelism-factor = 2
        parallelism-max = 8
        parallelism-min = 1
      }
    }
    debug {
      unhandled = on
    }
  }
  remote {

    log-remote-lifecycle-events = on
    #    use-dispatcher = ""
    use-dispatcher = "akka.remote.default-remote-dispatcher"
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      port = 0
      hostname = "127.0.0.1"
      server-socket-worker-pool {
        pool-size-min = 1
        pool-size-max = 2
      }
      client-socket-worker-pool {
        pool-size-min = 1
        pool-size-max = 2
      }
    }
    default-remote-dispatcher {
      throughput = 5
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-max = 2
      }
    }
    startup-timeout = 600 s
    shutdown-timeout = 600 s
    flush-wait-on-shutdown = 2 s
    command-ack-timeout = 600 s

    transport-failure-detector {
      heartbeat-interval = 600 s
      acceptable-heartbeat-pause = 2000 s
    }
    watch-failure-detector {
      heartbeat-interval = 600 s
      acceptable-heartbeat-pause = 10 s
      unreachable-nodes-reaper-interval = 600s
      expected-response-after = 3 s
    }
    retry-gate-closed-for = 5 s
    prune-quarantine-marker-after = 5 d
    system-message-ack-piggyback-timeout = 600 s
    resend-interval = 600 s
    initial-system-message-delivery-timeout = 3 m
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp.connection-timeout = 600 s
  }
}