{"version":3,"sources":["dashing.js"],"names":["window","document","undefined","angular","module","run","$templateCache","put","factory","conditionToBootstrapLabelClass","condition","directive","EchartWrapper","restrict","template","replace","scope","options","api","onResize","controller","$scope","$element","defaults","handleResizeEvent","handled","$apply","chart","resize","elem0","forEach","prop","style","echarts","init","setTheme","lookAndFeel","element","on","$on","off","dispose","rebuild","service","util","this","initOptions","prototype","hideLoading","clear","setOption","isGraphDataAvailable","addDataPoints","dataPointsQueue","_applyGroupingFix","groupId","copy","isFunction","group","String","length","dataPoints","silent","Array","isArray","console","warn","msg","data","currentChartOptions","getOption","dataArray","_dataPointsToDataArray","addData","actualVisibleDataPoints","series","dataPointsGrowNum","Math","max","visibleDataPointsNum","Number","MAX_VALUE","xAxisTypeIsTime","xAxis","type","yAxis","seriesNum","_makeDataArray","ex","array","ensureArray","datum","dataGrow","yValues","y","slice","yValue","seriesIndex","params","x","push","lastSeriesIndex","currentOptions","isObject","updateOption","constant","markLine","symbol","title","textStyle","fontSize","fontWeight","color","legend","itemGap","tooltip","borderRadius","padding","showDelay","transitionDuration","position","pos","fontFamily","loadingText","noDataText","addDataAnimation","$filter","buildTooltipSeriesTable","name","use","tooltipSeriesColorIndicatorHtml","border","lighter","mergeValuesAndSortByName","grouped","point","result","selected","reduce","p","c","abs","value","reverse","valueFormatter","defaultValueFormatter","nameFormatter","defaultNameFormatter","map","join","isDate","now","Date","getYear","getMonth","getDay","args","trigger","axisPointer","formatter","splitInitialData","visibleDataPoints","older","newer","categoryTooltip","param","colors","line","seriesName","filter","timelineChartFix","axis","boundaryGap","showAllSymbol","stack","validateSeriesNames","seriesNames","first","message","_","i","axisLabelFormatter","unit","replaceLookup","hasOwnProperty","isNumber","hr","text","toHumanReadableNumber","modifier","toLowerCase","makeDataSeries","symbolSize","smooth","itemStyle","normal","lineStyle","width","borderColor","borderWidth","emphasis","hover","alpha","areaStyle","area","merge","fillAxisData","inputs","isString","placeholder","unshift","dataSplit","xLabels","linkFn","toEchartOptionFn","$watch","newOptions","oldOptions","equals","$echarts","toEchartOptions","dsOptions","yAxisSplitNum","yAxisShowMinorAxisLine","yAxisLabelWidth","yAxisLabelFormatter","static","rotate","xAxisShowLabels","margin","left","right","top","bottom","barMaxWidth","barMaxSpacing","barMinWidth","barMinSpacing","barChartColorRecommendation","base","buildColorStates","axisColor","minMargin","horizontalMargin","height","shadowStyle","grid","x2","y2","axisLabel","show","axisLine","axisTick","splitLine","splitNumber","axisSwap","drawBarMinWidth","drawBarMaxWidth","drawAllBarMinWidth","drawAllBarMaxWidth","chartHeight","parseInt","gridMarginY","info","gridMarginX","chartControlWidth","getChartControlWidthFn","visibleWidthForBars","roundedVisibleWidthForBars","floor","scrollbarHeight","scrollbarGridMargin","dataZoom","end","realtime","handleColor","fillerColor","isDefined","link","children","offsetWidth","handleResize","_dirty","seriesStacked","seriesLineSmooth","showLegend","yAxisShowSplitLine","yAxisScaled","lineChartColorRecommendation","borderLineStyle","xAxisBoundaryGap","onZero","scale","yAxisIndex","seriesYAxisIndex","contains","yAxis2","yAxis2LabelFormatter","titleHeight","legendHeight","addLegend","itemWidth","self","palette","blue","blueishGreen","repeatArray","purple","darkRed","orange","lightBlue","darkBlue","lightGreen","darkGray","ringChartColorRecommendation","templateUrl","caption","help","current","subText","available","used","thickness","outerRadius","innerRadius","innerTextFontSize","itemStyleBase","label","labelLine","selectedMode","icon","center","radius","round","baseline","total","unselectable","append","yAxisBoundaryGap","defaultMargin","series0Type","popup","elem","css","triggerHandler","$modal","i18n","createModalDialog","onClose","modalCloseEventName","dialog","backdrop","plainContent","content","size","close","modalValue","$emit","$hide","values","confirm","onConfirm","confirmationDialogTitle","yesButton","confirmationYesButtonText","noButton","confirmationNoButtonText","handleCloseFn","notice","notificationDialogTitle","closeButton","closeButtonText","items","props","item","keys","Object","subtext","lowercase","indexOf","millis","compact","toHumanReadableDuration","validation","buildChoicesForSelect","choices","choice","buildChoicesForRadioGroup","buildChoicesForDropDownMenu","onSelect","click","fixDateTimeControlMarginResponsive","widthBreakPoint","innerWidth","timeControlLeftMargin","timeControlTopMargin","onresize","invalid","attrs","labelStyleClass","controlStyleClass","choiceIconStyleClass","renderAs","pristine","required","validateFn","searchPlaceholder","eval","allowSearchInChoices","searchEnabled","allowClearSelection","buttonStyleClass","btnStyleClass","toggle","min","integerInRange","dateControlStyleClass","timeControlStyleClass","fillDefaultDate","dateValue","fillDefaultTime","timeValue","setSeconds","setMilliseconds","dateInputInvalid","timeInputInvalid","newVal","oldVal","isUndefined","$watchCollection","val","acceptPattern","filename","files","openUpload","spans","find","uploadButton","clearSelection","hideMenuCaret","choicesMenu","ngModel","hint","hideHint","restoreHint","emptySearchResult","paginationSummary","unitPlural","remarkType","clickHelp","colorMapperFn","updateUsageAndClass","usage","usageClass","defaultColorMapperFn","$observe","raw","readable","toFixed","precision","renderer","BYTES","NUMBER","LINK","href","BUTTON","target","win","open","focus","location","object","DATETIME","DURATION","INDICATOR","NUMBER1","NUMBER2","PROGRESS_BAR","TAG","TEXT","placement","styleClass","shape","colorStyle","conditionToColor","cursorStyle","labelColorClass","bootstrap","captionTooltip","subCaption","propNameClass","propValueClass","PB","done","button","bytes","datetime","duration","indicator","number","number1","number2","progressbar","tag","$update","field","transclude","pagination","columns","records","search","searchControl","columnStyleClass","column","addStyleClass","dest","clazz","styleClassArray","key","vertical","possibleStripeColumns","bgColorForStripeFix","index","record","cell","multipleRendererColumnsRenderers","hasRecords","require","stTable","updateText","tableState","totalItemCount","stRange","from","to","start","currentPage","numberOfPages","stItemsByPage","config","stConfig","sort","skipNatural","delay","arrayKeyEqual","lhs","rhs","equal","one","CB","canSort","overrideSortKey","sortKey","sortDefault","descent","defaultSort","sortDefaultDescent","styles","split","textRight","textLeft","splice","sortBy","multiple","renderers","keyToCheck","$check","cols","model","col","select","tab","reload","tabs","load","addTab","selectTab","activeTabIndex","$http","$controller","$compile","ctrl","createTemplateScope","html","templateScope","$new","scopeController","contents","loaded","heading","get","then","response","alignArray","default_","sum","skyBlue","darkPink","level","zrender","tool","lift","transparency","digits","positive","positiveValue","s","e","log","pow","isNaN","units","mod","t","class","test","integer"],"mappings":"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","file":"dashing.min.js","sourcesContent":["/*! dashing (assembled widgets) v0.4.9 | Apache License 2.0 | https://github.com/stanleyxu2005/dashing */\n(function(window, document, undefined) {\n'use strict';\nangular.module('dashing', [\n  'dashing.charts.bar',\n  'dashing.charts.line',\n  'dashing.charts.metrics_sparkline',\n  'dashing.charts.ring',\n  'dashing.charts.sparkline',\n  'dashing.dialogs',\n  'dashing.forms.form_control',\n  'dashing.forms.searchbox',\n  'dashing.metrics',\n  'dashing.progressbar',\n  'dashing.property',\n  'dashing.property.number',\n  'dashing.remark',\n  'dashing.state.indicator',\n  'dashing.state.tag',\n  'dashing.tables.property_table',\n  'dashing.tables.sortable_table',\n  'dashing.tabset',\n  'dashing.contextmenu',\n  'dashing.tables.property_table.builder',\n  'dashing.tables.sortable_table.builder',\n  'dashing.filters.any',\n  'dashing.filters.duration'\n]);\nangular.module('dashing').run(['$templateCache',\n  function($templateCache) {\n    $templateCache.put('charts/metrics_sparkline_td.html', '<metrics caption=\"{{caption}}\" ng-attr-help=\"{{help}}\" value=\"{{current}}\" unit=\"{{unit}}\" sub-text=\"{{subText}}\" class=\"metrics-thicker-bottom\"> </metrics> <sparkline-chart options-bind=\"options\" datasource-bind=\"data\"> </sparkline-chart>');\n    $templateCache.put('dialogs/confirmation.html', '<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content {{size}}\"> <div class=\"modal-body\"> <h4 ng-if=\"title\" class=\"modal-title\" ng-bind=\"title\"></h4> <h5 style=\"font-weight: 400\" ng-bind=\"content\"></h5> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-sm btn-primary\" ng-click=\"close(1)\" ng-bind=\"text.yesButton\"> </button> <button type=\"button\" class=\"btn btn-sm btn-default\" ng-click=\"close(0)\" ng-bind=\"text.noButton\"> </button> </div> </div> </div> </div>');\n    $templateCache.put('dialogs/notification.html', '<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\"> <div class=\"modal-dialog\"> <div class=\"modal-content {{size}}\"> <div class=\"modal-body\"> <h4 ng-if=\"title\" class=\"modal-title\" ng-bind=\"title\"></h4> <h5 style=\"font-weight: 400\" ng-bind-html=\"content\"></h5> </div> <div class=\"modal-footer\"> <button type=\"button\" class=\"btn btn-sm btn-default\" ng-click=\"close(0)\" ng-bind=\"text.closeButton\"> </button> </div> </div> </div> </div>');\n    $templateCache.put('forms/datepicker.html', '<div class=\"dropdown-menu datepicker\" ng-class=\"\\'datepicker-mode-\\' + $mode\" style=\"max-width: 320px\"> <table style=\"table-layout: fixed; height: 100%; width: 100%\"> <thead> <tr class=\"text-center dt-header\"> <th> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-left\" ng-click=\"$selectPane(-1)\"> <i class=\"glyphicon glyphicon-triangle-left\"></i> </button> </th> <th colspan=\"{{ rows[0].length - 2 }}\"> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius btn-block text-strong\" ng-click=\"$toggleMode()\"> <strong style=\"text-transform: capitalize\" ng-bind=\"title\"></strong> </button> </th> <th> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-right\" ng-click=\"$selectPane(+1)\"> <i class=\"glyphicon glyphicon-triangle-right\"></i> </button> </th> </tr> <tr ng-if=\"showLabels\" ng-bind-html=\"labels\"></tr> </thead> <tbody> <tr ng-repeat=\"(i, row) in rows track by $index\"> <td class=\"text-center\" ng-repeat=\"(j, el) in row track by $index\"> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius\" style=\"width: 100%; padding: 4px 3px\" ng-class=\"{\\'btn-primary\\': el.selected, \\'btn-info btn-today\\': el.isToday && !el.selected}\" ng-click=\"$select(el.date)\" ng-disabled=\"el.disabled\"> <span ng-class=\"{\\'text-muted\\': el.muted}\" ng-bind=\"el.label\"></span> </button> </td> </tr> </tbody> </table> </div>');\n    $templateCache.put('forms/form_controls.html', '<div class=\"form-group\"> <label class=\"{{labelStyleClass}} control-label text-right\"> <span ng-bind=\"label\"></span> <span ng-if=\"help\" style=\"font-size: 0.9em\"> <remark tooltip=\"{{help}}\" type=\"info\"></remark> </span> </label> <ng-switch on=\"renderAs\">  <div ng-switch-when=\"choices\"> <div class=\"{{controlStyleClass}}\"> <ui-select theme=\"select2\" class=\"form-control\" ng-model=\"$parent.$parent.value\" search-enabled=\"allowSearchInChoices\"> <ui-select-match placeholder=\"{{placeholder}}\" allow-clear=\"{{allowClearSelection}}\">{{$select.selected.text}} </ui-select-match> <ui-select-choices repeat=\"choice in choices|\\n          any: {text: $select.search, subtext: $select.search}\"> <div ng-class=\"{\\'bold\\': $select.selected === choice}\" ng-bind-html=\"choice.text|highlight:$select.search\"></div> <small ng-if=\"choice.subtext\" ng-class=\"{\\'bold\\': $select.selected === choice}\" ng-bind-html=\"choice.subtext|highlight:$select.search\"></small> </ui-select-choices> </ui-select> </div> </div>  <div ng-switch-when=\"check\"> <div class=\"{{controlStyleClass}} checkbox\"> <label> <input type=\"checkbox\" ng-checked=\"$parent.value\" ng-click=\"$parent.value = !$parent.value\"> <span ng-bind=\"text\"></span> </label> </div> </div>  <div ng-switch-when=\"multi-checks\"> <div class=\"{{controlStyleClass}}\"> <label class=\"checkbox-inline\" ng-repeat=\"choice in choices track by $index\"> <input type=\"checkbox\" ng-checked=\"$parent.value[$index]\" ng-click=\"$parent.value[$index] = !$parent.value[$index]\"> <span ng-bind=\"choice\"></span> </label> </div> </div>  <div ng-switch-when=\"radio\"> <div class=\"{{controlStyleClass}}\"> <div class=\"btn-group btn-group-justified\"> <div ng-repeat=\"choice in choices track by $index\" class=\"btn-group\"> <button type=\"button\" class=\"btn {{buttonStyleClass}} btn-default\" ng-class=\"{\\'btn-primary\\': choice.value == value}\" ng-bind=\"choice.text\" value=\"{{choice.value}}\" ng-click=\"toggle(choice.value)\"></button> </div> </div> </div> </div>  <div ng-switch-when=\"integer\"> <div class=\"{{controlStyleClass}}\" ng-class=\"{\\'has-error\\': !pristine && invalid}\"> <input type=\"number\" class=\"form-control input-sm\" ng-attr-min=\"{{min}}\" ng-attr-max=\"{{max}}\" ng-model=\"$parent.value\"> </div> </div>  <div ng-switch-when=\"datetime\"> <div class=\"{{dateControlStyleClass}} has-feedback\" ng-class=\"{\\'has-error\\': dateInputInvalid}\"> <input class=\"form-control input-sm\" type=\"text\" size=\"10\" placeholder=\"YYYY-MM-DD\" data-date-format=\"yyyy-MM-dd\" ng-model=\"$parent.dateValue\" date-type=\"string\" ng-click=\"fillDefaultDate()\" autoclose=\"true\" use-native=\"true\" template-url=\"forms/datepicker.html\" bs-datepicker> <span class=\"glyphicon glyphicon-calendar form-control-feedback fc-feedback-sm\"></span> </div> <div class=\"{{timeControlStyleClass}} has-feedback\" ng-style=\"{\\'padding-left\\': timeControlLeftMargin, \\'margin-top\\': timeControlTopMargin}\" ng-class=\"{\\'has-error\\': timeInputInvalid}\"> <input class=\"form-control input-sm\" type=\"text\" size=\"8\" placeholder=\"HH:mm:ss\" data-time-format=\"HH:mm:ss\" ng-model=\"$parent.timeValue\" time-type=\"string\" hour-step=\"1\" minute-step=\"1\" second-step=\"1\" data-length=\"3\" ng-focus=\"fillDefaultTime()\" use-native=\"true\" arrow-behavior=\"picker\" template-url=\"forms/timepicker.html\" bs-timepicker> <span class=\"glyphicon glyphicon-time form-control-feedback fc-feedback-sm\"></span> </div> </div>  <div ng-switch-when=\"upload\"> <div class=\"{{controlStyleClass}} has-feedback\" ng-class=\"{\\'has-error\\': !pristine && invalid}\"> <input type=\"text\" readonly=\"readonly\" class=\"form-control input-sm\" placeholder=\"Click here to select a file\" style=\"cursor: pointer\" ng-click=\"openUpload()\" ng-model=\"$parent.filename\">  <span ng-hide=\"$parent.value\" class=\"glyphicon glyphicon-folder-open form-control-feedback fc-feedback-sm clickable\" ngf-select ng-model=\"$parent.files\" accept=\"{{acceptPattern}}\" ngf-accept=\"\\'{{acceptPattern}}\\'\"></span> <span ng-show=\"$parent.value\" class=\"glyphicon glyphicon-trash form-control-feedback fc-feedback-sm clickable\" ng-click=\"clearSelection()\"></span> </div> </div>  <div ng-switch-default> <div class=\"{{controlStyleClass}}\"> <div ng-class=\"{\\'has-error\\': !pristine && invalid}\"> <div ng-class=\"{\\'input-group\\': choicesMenu}\"> <input type=\"text\" class=\"form-control input-sm\" ng-model=\"$parent.value\"> <div ng-if=\"choicesMenu\" class=\"input-group-btn\"> <button type=\"button\" class=\"btn btn-sm btn-default dropdown-toggle\" bs-dropdown=\"choicesMenu\" placement=\"auto bottom-left\" html=\"true\"> <span class=\"{{choiceIconStyleClass}} clickable\"></span> <span ng-if=\"!hideMenuCaret\" class=\"caret\"></span> </button> </div> </div> </div> </div> </div> </ng-switch> </div>');\n    $templateCache.put('forms/searchbox.html', '<div class=\"form-group has-feedback\"> <input type=\"text\" class=\"form-control\" placeholder=\"{{hint}}\" ng-model=\"ngModel\" ng-blur=\"restoreHint()\" ng-focus=\"hideHint()\"> <small class=\"glyphicon glyphicon-search form-control-feedback\"></small> </div>');\n    $templateCache.put('forms/timepicker.html', '<div class=\"dropdown-menu timepicker\" style=\"min-width: 0; width: auto\"> <table height=\"100%\"> <thead> <tr class=\"text-center\"> <th> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-left\" ng-click=\"$arrowAction(1, 0)\"> <i class=\"glyphicon glyphicon-triangle-top\"></i> </button> </th> <th> &nbsp; </th> <th> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-left\" ng-click=\"$arrowAction(1, 1)\"> <i class=\"glyphicon glyphicon-triangle-top\"></i> </button> </th> <th> &nbsp; </th> <th> <button ng-if=\"showSeconds\" tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-left\" ng-click=\"$arrowAction(1, 2)\"> <i class=\"glyphicon glyphicon-triangle-top\"></i> </button> </th> </tr> </thead> <tbody> <tr ng-repeat=\"(i, row) in rows\"> <td class=\"text-center\"> <button tabindex=\"-1\" style=\"width: 100%\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius\" ng-class=\"{\\'btn-primary\\': row[0].selected}\" ng-click=\"$select(row[0].date, 0)\" ng-disabled=\"row[0].disabled\"> <span ng-class=\"{\\'text-muted\\': row[0].muted}\" ng-bind=\"row[0].label\"></span> </button> </td> <td> <span class=\"time-separator\" ng-bind=\"i == midIndex ? timeSeparator : \\' \\'\"></span> </td> <td class=\"text-center\"> <button tabindex=\"-1\" ng-if=\"row[1].date\" style=\"width: 100%\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius\" ng-class=\"{\\'btn-primary\\': row[1].selected}\" ng-click=\"$select(row[1].date, 1)\" ng-disabled=\"row[1].disabled\"> <span ng-class=\"{\\'text-muted\\': row[1].muted}\" ng-bind=\"row[1].label\"></span> </button> </td> <td> <span class=\"time-separator\" ng-bind=\"i == midIndex ? timeSeparator : \\' \\'\"></span> </td> <td class=\"text-center\"> <button tabindex=\"-1\" ng-if=\"showSeconds && row[2].date\" style=\"width: 100%\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius\" ng-class=\"{\\'btn-primary\\': row[2].selected}\" ng-click=\"$select(row[2].date, 2)\" ng-disabled=\"row[2].disabled\"> <span ng-class=\"{\\'text-muted\\': row[2].muted}\" ng-bind=\"row[2].label\"></span> </button> </td> <td ng-if=\"showAM\"> &nbsp; </td> <td ng-if=\"showAM\"> <button tabindex=\"-1\" ng-show=\"i == midIndex - !isAM * 1\" style=\"width: 100%\" type=\"button\" ng-class=\"{\\'btn-primary\\': !!isAM}\" class=\"btn btn-default\" ng-click=\"$switchMeridian()\" ng-disabled=\"el.disabled\">AM</button> <button tabindex=\"-1\" ng-show=\"i == midIndex + 1 - !isAM * 1\" style=\"width: 100%\" type=\"button\" ng-class=\"{\\'btn-primary\\': !isAM}\" class=\"btn btn-default\" ng-click=\"$switchMeridian()\" ng-disabled=\"el.disabled\">PM</button> </td> </tr> </tbody> <tfoot> <tr class=\"text-center\"> <th> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-left\" ng-click=\"$arrowAction(-1, 0)\"> <i class=\"glyphicon glyphicon-triangle-bottom\"></i> </button> </th> <th> &nbsp; </th> <th> <button tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-left\" ng-click=\"$arrowAction(-1, 1)\"> <i class=\"glyphicon glyphicon-triangle-bottom\"></i> </button> </th> <th> &nbsp; </th> <th> <button ng-if=\"showSeconds\" tabindex=\"-1\" type=\"button\" class=\"btn btn-sm btn-default btn-no-radius pull-left\" ng-click=\"$arrowAction(-1, 2)\"> <i class=\"glyphicon glyphicon-triangle-bottom\"></i> </button> </th> </tr> </tfoot> </table> </div>');\n    $templateCache.put('metrics/metrics.html', '<div class=\"metrics\"> <div> <span class=\"metrics-caption\" ng-bind=\"caption\"></span> <remark ng-if=\"help\" type=\"{{remarkType}}\" tooltip=\"{{help}}\" ng-click=\"clickHelp()\"></remark> </div> <h3 class=\"metrics-value\"> <span ng-bind=\"value\"></span> <ng-switch on=\"unitPlural && value > 1\"> <small ng-switch-when=\"true\" ng-bind=\"unitPlural\"></small> <small ng-switch-default ng-bind=\"unit\"></small> </ng-switch> </h3> <small ng-if=\"subText\" class=\"metrics-sub-text\" ng-bind=\"subText\"></small> </div>');\n    $templateCache.put('progressbar/progressbar.html', '<div style=\"width: 100%\">  <span class=\"small pull-left\" ng-bind=\"current+\\'/\\'+max\"></span> <span class=\"small pull-right\" ng-bind=\"usage + \\'%\\'\"></span> </div> <div style=\"clear: both; height: 1px\"></div> <div style=\"width: 100%\" class=\"progress progress-tiny\"> <div ng-style=\"{\\'width\\': usage+\\'%\\'}\" class=\"progress-bar {{usageClass}}\"></div> </div>');\n    $templateCache.put('property/number.html', '<div> <span ng-bind=\"value\"></span> <span ng-if=\"unit\" ng-bind=\"unit\"></span> </div>');\n    $templateCache.put('property/property.html', '<ng-switch on=\"renderer\">  <a ng-switch-when=\"Link\" ng-href=\"{{href}}\" ng-bind=\"text\" ng-attr-target=\"{{target}}\"></a>  <button ng-switch-when=\"Button\" ng-if=\"!hide\" type=\"button\" class=\"btn btn-default {{class}}\" ng-bind=\"text\" ng-click=\"click()\" ng-disabled=\"disabled\" ng-attr-bs-tooltip=\"tooltip\"></button>  <tag ng-switch-when=\"Tag\" text=\"{{text}}\" ng-attr-href=\"{{href}}\" ng-attr-condition=\"{{condition}}\" ng-attr-tooltip=\"{{tooltip}}\"></tag>  <indicator ng-switch-when=\"Indicator\" ng-attr-shape=\"{{shape}}\" ng-attr-condition=\"{{condition}}\" ng-attr-tooltip=\"{{tooltip}}\"></indicator>  <progressbar ng-switch-when=\"ProgressBar\" current=\"{{current}}\" max=\"{{max}}\"></progressbar>  <div ng-switch-when=\"Duration\" ng-bind=\"value|duration\"></div>  <div ng-switch-when=\"DateTime\" ng-bind=\"value|date:\\'yyyy-MM-dd HH:mm:ss\\'\"></div>  <number ng-switch-when=\"Number\" raw=\"{{raw}}\" ng-attr-unit=\"{{unit}}\" ng-attr-precision=\"{{precision}}\" ng-attr-readable=\"{{readable}}\"></number>  <div ng-switch-when=\"Number1\" ng-bind=\"value|number:1\"></div>  <div ng-switch-when=\"Number2\" ng-bind=\"value|number:2\"></div>  <div ng-switch-default ng-bind=\"value\"></div> </ng-switch>');\n    $templateCache.put('remark/remark.html', '<span class=\"{{styleClass}}\" ng-attr-bs-tooltip=\"tooltip\" ng-style=\"{cursor: tooltip ? \\'pointer\\': \\'default\\'}\" ng-attr-placement=\"{{placement}}\" ng-attr-trigger=\"{{trigger}}\"></span>');\n    $templateCache.put('state/indicator.html', '<ng-switch on=\"shape\"> <div ng-switch-when=\"stripe\" ng-style=\"{\\'background-color\\': colorStyle}\" style=\"display: inline-block; height: 100%; width: 8px; cursor: default\" bs-tooltip=\"tooltip\" placement=\"right auto\"></div> <span ng-switch-default ng-style=\"{\\'color\\': colorStyle, \\'cursor\\': cursorStyle}\" class=\"glyphicon glyphicon-stop\" bs-tooltip=\"tooltip\"></span> </ng-switch>');\n    $templateCache.put('state/tag.html', '<ng-switch on=\"!href\"> <a ng-switch-when=\"false\" ng-href=\"{{href}}\" class=\"label label-lg {{labelColorClass}}\" ng-bind=\"text\" bs-tooltip=\"tooltip\"></a> <span ng-switch-when=\"true\" class=\"label label-lg {{labelColorClass}}\" ng-style=\"{\\'cursor\\': cursorStyle}\" ng-bind=\"text\" bs-tooltip=\"tooltip\"></span> </ng-switch>');\n    $templateCache.put('tables/property_table/property_table.html', '<table class=\"table table-striped table-hover\"> <caption ng-if=\"caption\"> {{caption}} <remark ng-if=\"captionTooltip\" tooltip=\"{{captionTooltip}}\" placement=\"right\"></remark> <small ng-if=\"subCaption\" class=\"visible-md\" ng-bind=\"subCaption\"></small> </caption> <tbody> <tr ng-repeat=\"prop in props track by $index\"> <td ng-attr-ng-class=\"propNameClass\"> <span ng-bind=\"prop.name\"></span> <remark ng-if=\"prop.help\" type=\"question\" tooltip=\"{{prop.help}}\"></remark> </td> <td ng-attr-ng-class=\"propValueClass\"> <ng-switch on=\"prop.hasOwnProperty(\\'values\\')\"> <property ng-switch-when=\"true\" ng-repeat=\"value in prop.values track by $index\" value-bind=\"value\" renderer=\"{{::prop.renderer}}\"></property> <property ng-switch-when=\"false\" value-bind=\"prop.value\" renderer=\"{{::prop.renderer}}\"></property> </ng-switch> </td> </tr> </tbody> </table>');\n    $templateCache.put('tables/sortable_table/sortable_table.html', '<table class=\"table table-hover\" st-table=\"showing\" st-safe-src=\"records\"> <caption ng-if=\"caption\"> {{caption}} <remark ng-if=\"captionTooltip\" tooltip=\"{{captionTooltip}}\" placement=\"right\"></remark> <small ng-if=\"subCaption\" class=\"visible-md\" ng-bind=\"subCaption\"></small> </caption> <thead> <tr ng-if=\"!hasRecords()\"> <th colspan=\"{{columns.length}}\" class=\"text-center active\" ng-transclude></th> </tr> <tr ng-if=\"hasRecords()\"> <th ng-repeat=\"column in columns track by $index\" class=\"{{::columnStyleClass[$index]}}\" ng-attr-st-sort=\"{{::column.sortKey}}\" ng-attr-st-sort-default=\"{{::column.defaultSort}}\"> <span ng-bind=\"::column.name\"></span> <remark ng-if=\"column.help\" type=\"question\" tooltip=\"{{::column.help}}\"></remark> <span ng-if=\"column.unit\" class=\"unit\" ng-bind=\"::column.unit\"></span> </th> </tr> <tr ng-show=\"false\"> <th colspan=\"{{columns.length}}\">  <input type=\"hidden\" st-search>  <div st-pagination st-items-by-page=\"pagination\"></div> </th> </tr> </thead> <tbody style=\"height: 100%\"> <tr ng-repeat=\"record in showing track by $index\" style=\"display: table-row; height: 100%\"> <td ng-repeat=\"column in columns track by $index\" class=\"{{columnStyleClass[$index]}}\" style=\"height: 100%\" ng-style=\"{\\'background-color\\': bgColorForStripeFix($index, record)}\"> <ng-switch on=\"isArray(column.key)\"> <property ng-switch-when=\"true\" ng-repeat=\"columnKeyChild in column.key track by $index\" value-bind=\"record[columnKeyChild]\" renderer=\"{{multipleRendererColumnsRenderers[$parent.$index][$index]}}\"></property> <property ng-switch-when=\"false\" value-bind=\"record[column.key]\" renderer=\"{{column.renderer}}\"></property> </ng-switch> </td> </tr> <tr ng-if=\"search && (!showing || !showing.length)\"> <td colspan=\"{{columns.length}}\" class=\"text-center\"> <h5 ng-bind=\"emptySearchResult\"></h5> </td> </tr> </tbody> <tfoot ng-if=\"records.length\"> <tr> <td colspan=\"{{columns.length}}\" st-pagination st-items-by-page=\"pagination\" st-template=\"tables/sortable_table/sortable_table_pagination.html\"> </td> </tr> </tfoot> </table>');\n    $templateCache.put('tables/sortable_table/sortable_table_pagination.html', '<div class=\"pull-left hidden-sm hidden-xs\" style=\"margin-bottom: 10px\">  <st-summary></st-summary> </div> <div class=\"pull-right\"> <div ng-if=\"pages.length >= 2\" class=\"btn-group btn-group-xs tb-pagination\"> <button ng-if=\"pages[0] > 1 + 10\" type=\"button\" class=\"btn btn-default\" ng-click=\"selectPage(1)\"> 1 </button> <button ng-if=\"pages[0] > 1\" type=\"button\" class=\"btn btn-default\" ng-click=\"selectPage(currentPage - 1)\"> &laquo;</button> <button type=\"button\" class=\"btn btn-default\" ng-repeat=\"page in pages track by $index\" ng-class=\"{active: page == currentPage}\" ng-click=\"selectPage(page)\"> {{page}} </button> <button ng-if=\"pages[pages.length - 1] < numPages\" type=\"button\" class=\"btn btn-default\" ng-click=\"selectPage(currentPage + 1)\"> &raquo;</button> <button ng-if=\"pages[pages.length - 1] < numPages - 10\" type=\"button\" class=\"btn btn-default\" ng-click=\"selectPage(numPages)\"> {{numPages}} </button> </div> </div>');\n    $templateCache.put('tabset/tabset.html', '<ul class=\"nav nav-tabs nav-tabs-underlined\"> <li ng-repeat=\"tab in tabs track by $index\" ng-class=\"{active:tab.selected}\"> <a href=\"\" ng-click=\"selectTab($index)\" ng-bind=\"tab.heading\"></a> </li> </ul> <div class=\"tab-content\" ng-transclude></div>');\n  }\n]);\nangular.module('dashing.util.bootstrap', [])\n.factory('dashing.util.bootstrap', function() {\n  return {\n    conditionToBootstrapLabelClass: function(condition) {\n      switch (condition) {\n        case 'good':\n          return 'label-success';\n        case 'concern':\n          return 'label-warning';\n        case 'danger':\n          return 'label-danger';\n        default:\n          return 'label-default';\n      }\n    }\n  };\n});\nangular.module('dashing.charts.adapter.echarts', [\n  'dashing.util'\n])\n  .directive('echart', ['EchartWrapper',\n    function(EchartWrapper) {\n      return {\n        restrict: 'E',\n        template: '<div></div>',\n        replace: true,\n        scope: {\n          options: '=',\n          api: '=',\n          onResize: '&'\n        },\n        controller: ['$scope', '$element', 'dashing.charts.echarts.defaults',\n          function($scope, $element, defaults) {\n            var options = $scope.options;\n            var elem0 = $element[0];\n            angular.forEach(['width', 'height'], function(prop) {\n              if (options[prop]) {\n                elem0.style[prop] = options[prop];\n              }\n            });\n            var chart = echarts.init(elem0);\n            chart.setTheme(defaults.lookAndFeel);\n            function handleResizeEvent() {\n              var handled = $scope.onResize();\n              if (handled) {\n                return $scope.$apply();\n              }\n              chart.resize();\n            }\n            angular.element(window).on('resize', handleResizeEvent);\n            $scope.$on('$destroy', function() {\n              angular.element(window).off('resize', handleResizeEvent);\n              chart.dispose();\n              chart = null;\n            });\n            $scope.api = new EchartWrapper(chart);\n            $scope.api.rebuild(options);\n          }\n        ]\n      };\n    }\n  ])\n  .service('EchartWrapper', ['dashing.util',\n    function(util) {\n      var EchartWrapper = function(chart) {\n        this.chart = chart;\n        this.initOptions = null;\n      };\n      EchartWrapper.prototype = {\n        rebuild: function(options) {\n          this.chart.hideLoading();\n          this.chart.clear();\n          this.initOptions = null;\n          this.chart.setOption(options, true);\n          this.chart.resize();\n          if (!this.isGraphDataAvailable()) {\n            this.initOptions = angular.copy(options);\n            return;\n          }\n          this.addDataPoints(options.dataPointsQueue, true);\n          this._applyGroupingFix(options.groupId);\n        },\n        _applyGroupingFix: function(groupId) {\n          if (angular.isFunction(this.chart.group) && String(groupId).length) {\n            this.chart.groupId = groupId;\n            this.chart.group();\n          }\n        },\n        addDataPoints: function(dataPoints, silent) {\n          if (!Array.isArray(dataPoints) || !dataPoints.length) {\n            if (!silent) {\n              console.warn({\n                msg: 'Invalid input data points',\n                data: dataPoints\n              });\n            }\n            return;\n          }\n          if (this.initOptions !== null) {\n            this.rebuild(this.initOptions);\n          }\n          var currentChartOptions = this.chart.getOption();\n          var dataArray = this._dataPointsToDataArray(dataPoints, currentChartOptions);\n          if (dataArray.length > 0) {\n            this.chart.addData(dataArray);\n          }\n        },\n        _dataPointsToDataArray: function(dataPoints, options) {\n          try {\n            var actualVisibleDataPoints = options.series[0].data.length;\n            var dataPointsGrowNum = Math.max(0, (options.visibleDataPointsNum || Number.MAX_VALUE) - actualVisibleDataPoints);\n            var xAxisTypeIsTime = (options.xAxis[0].type === 'time') ||\n              (options.xAxis[0].type === 'value' && options.yAxis[0].type === 'time');\n            var seriesNum = options.series.length;\n            return this._makeDataArray(dataPoints, seriesNum, dataPointsGrowNum, xAxisTypeIsTime);\n          } catch (ex) {}\n          return [];\n        },\n        _makeDataArray: function(data, seriesNum, dataPointsGrowNum, xAxisTypeIsTime) {\n          var array = [];\n          angular.forEach(util.array.ensureArray(data), function(datum) {\n            var dataGrow = dataPointsGrowNum-- > 0;\n            var yValues = util.array.ensureArray(datum.y).slice(0, seriesNum);\n            if (xAxisTypeIsTime) {\n              angular.forEach(yValues, function(yValue, seriesIndex) {\n                var params = [seriesIndex, [datum.x, yValue], false, dataGrow];\n                array.push(params);\n              });\n            } else {\n              var lastSeriesIndex = yValues.length - 1;\n              angular.forEach(yValues, function(yValue, seriesIndex) {\n                var params = [seriesIndex, yValue, false, dataGrow];\n                if (seriesIndex === lastSeriesIndex) {\n                  params.push(datum.x);\n                }\n                array.push(params);\n              });\n            }\n          });\n          return array;\n        },\n        isGraphDataAvailable: function() {\n          var currentOptions = this.chart.getOption();\n          return angular.isObject(currentOptions.xAxis) &&\n            currentOptions.xAxis.length &&\n            currentOptions.xAxis[0].data;\n        },\n        updateOption: function(options) {\n          this.chart.setOption(options, false);\n        }\n      };\n      return EchartWrapper;\n    }\n  ])\n  .constant('dashing.charts.echarts.defaults', {\n    lookAndFeel: {\n      markLine: {\n        symbol: ['circle', 'circle']\n      },\n      title: {\n        textStyle: {\n          fontSize: 14,\n          fontWeight: 400,\n          color: '#000'\n        }\n      },\n      legend: {\n        textStyle: {\n          color: '#111',\n          fontWeight: 500\n        },\n        itemGap: 20\n      },\n      tooltip: {\n        borderRadius: 2,\n        padding: 0,\n        showDelay: 0,\n        transitionDuration: 0.5,\n        position: function(pos) {\n          return [pos[0], 10];\n        }\n      },\n      textStyle: {\n        fontFamily: 'Roboto,\"Helvetica Neue\",\"Segoe UI\",\"Hiragino Sans GB\",\"Microsoft YaHei\",Arial,Helvetica,SimSun,sans-serif',\n        fontSize: 12\n      },\n      loadingText: 'Data Loading...',\n      noDataText: 'No Graphic Data Available',\n      addDataAnimation: false\n    },\n    visibleDataPointsNum: 80\n  })\n  .factory('$echarts', ['$filter', 'dashing.util',\n    function($filter, util) {\n      function buildTooltipSeriesTable(name, array, use) {\n        function tooltipSeriesColorIndicatorHtml(color) {\n          var border = util.color.lighter(color, -0.2);\n          return '<div style=\"width: 10px; height: 10px; margin-top: 2px; border-radius: 2px; border: 1px solid ' + border + '; background-color: ' + color + '\"></div>';\n        }\n        function mergeValuesAndSortByName(array) {\n          var grouped = {};\n          angular.forEach(array, function(point) {\n            grouped[point.name] = grouped[point.name] || [];\n            grouped[point.name].push(point);\n          });\n          var result = [];\n          angular.forEach(grouped, function(group) {\n            var selected = group.reduce(function(p, c) {\n              return Math.abs(Number(p.value)) > Math.abs(c.value) ? p : c;\n            });\n            selected.value = group.reduce(function(p, c) {\n              return {\n                value: p.value + c.value\n              };\n            }).value;\n            result.push(selected);\n          });\n          return result.reverse();\n        }\n        var valueFormatter = use.valueFormatter || defaultValueFormatter;\n        return '<div style=\"padding: 8px\">' + [\n          (use.nameFormatter || defaultNameFormatter)(name),\n          '<table>' +\n          mergeValuesAndSortByName(array).map(function(point) {\n            if (point.value === '-') {\n              return '';\n            } else {\n              point.value = valueFormatter(point.value);\n            }\n            if (!point.name) {\n              point.name = point.value;\n              point.value = '';\n            }\n            return '<tr>' +\n              '<td>' + tooltipSeriesColorIndicatorHtml(point.color) + '</td>' +\n              '<td style=\"padding: 0 12px 0 4px\">' + point.name + '</td>' +\n              '<td style=\"text-align: right\">' + point.value + '</td>' +\n              '</tr>';\n          }).join('') +\n          '</table>'\n        ].join('') +\n          '</div>';\n      }\n      function defaultNameFormatter(name) {\n        if (angular.isDate(name)) {\n          var now = new Date();\n          return $filter('date')(name, (now.getYear() === name.getYear() &&\n              now.getMonth() === name.getMonth() &&\n              now.getDay() === name.getDay()) ?\n            'HH:mm:ss' : 'yyyy-MM-dd HH:mm:ss');\n        }\n        return name;\n      }\n      function defaultValueFormatter(value) {\n        return $filter('number')(value);\n      }\n      function tooltip(args) {\n        return {\n          trigger: args.trigger || 'axis',\n          axisPointer: {\n            type: 'none'\n          },\n          formatter: args.formatter\n        };\n      }\n      function splitInitialData(data, visibleDataPoints) {\n        if (!Array.isArray(data)) {\n          data = [];\n        }\n        if (!visibleDataPoints || data.length <= visibleDataPoints) {\n          return {\n            older: data,\n            newer: []\n          };\n        }\n        return {\n          older: data.slice(0, visibleDataPoints),\n          newer: data.slice(visibleDataPoints)\n        };\n      }\n      return {\n        categoryTooltip: function(valueFormatter, nameFormatter) {\n          return tooltip({\n            trigger: 'axis',\n            formatter: function(params) {\n              params = util.array.ensureArray(params);\n              var name = params[0].name;\n              var array = params.map(function(param) {\n                return {\n                  color: param.series.colors.line,\n                  name: param.seriesName,\n                  value: param.value\n                };\n              });\n              if (!name.length && !array.filter(function(point) {\n                return point.value !== '-';\n              }).length) {\n                return '';\n              }\n              var args = {\n                nameFormatter: nameFormatter,\n                valueFormatter: valueFormatter\n              };\n              return buildTooltipSeriesTable(name, array, args);\n            }\n          });\n        },\n        timelineChartFix: function(options, use) {\n          console.warn('Echarts does not have a good experience for time series. ' +\n            'We suggest to use category as x-axis type.');\n          options.tooltip = tooltip({\n            trigger: 'item',\n            formatter: function(params) {\n              var array = [{\n                color: params.series.colors.line,\n                name: params.series.name,\n                value: params.value[1]\n              }];\n              return buildTooltipSeriesTable(params.value[0], array, use);\n            }\n          });\n          angular.forEach(options.xAxis, function(axis) {\n            delete axis.boundaryGap;\n          });\n          angular.forEach(options.series, function(series) {\n            series.showAllSymbol = true;\n            series.stack = false;\n          });\n        },\n        validateSeriesNames: function(use, data) {\n          if (!use.seriesNames) {\n            var first = util.array.ensureArray(data[0].y);\n            if (first.length > 1) {\n              console.warn({\n                message: 'You should define `options.seriesNames`',\n                options: use\n              });\n            }\n            use.seriesNames = first.map(function(_, i) {\n              return 'Series ' + (i + 1);\n            });\n          }\n        },\n        axisLabelFormatter: function(unit, replaceLookup) {\n          return function(value) {\n            if (replaceLookup && replaceLookup.hasOwnProperty(value)) {\n              return replaceLookup[value];\n            }\n            if (value != 0 && angular.isNumber(value)) {\n              var hr = util.text.toHumanReadableNumber(value, 1000, 1);\n              return hr.value + (unit ? ' ' + hr.modifier + unit : hr.modifier.toLowerCase());\n            }\n            return value;\n          };\n        },\n        makeDataSeries: function(args) {\n          var options = {\n            type: args.type || 'line',\n            symbol: 'circle',\n            symbolSize: 4,\n            smooth: args.smooth,\n            itemStyle: {\n              normal: {\n                color: args.colors.line,\n                lineStyle: {\n                  width: args.stack ? 4 : 3\n                },\n                borderColor: 'transparent',\n                borderWidth: 6\n              },\n              emphasis: {\n                color: args.colors.hover,\n                borderColor: util.color.alpha(args.colors.line, 0.3)\n              }\n            }\n          };\n          if (args.stack) {\n            options.itemStyle.normal.areaStyle = {\n              type: 'default',\n              color: args.colors.area\n            };\n          } else if (args.showAllSymbol) {\n            options.itemStyle.normal.lineStyle.width -= 1;\n          }\n          return angular.merge(args, options);\n        },\n        fillAxisData: function(options, data, inputs) {\n          data = data || [];\n          if (angular.isObject(inputs)) {\n            if (angular.isString(inputs.groupId) && inputs.groupId.length) {\n              options.groupId = inputs.groupId;\n            }\n            if (inputs.visibleDataPointsNum > 0) {\n              options.visibleDataPointsNum = inputs.visibleDataPointsNum;\n              var placeholder = {\n                x: '',\n                y: options.series.map(function() {\n                  return {\n                    value: '-',\n                    tooltip: {}\n                  };\n                })\n              };\n              while (data.length < inputs.visibleDataPointsNum) {\n                data.unshift(placeholder);\n              }\n            }\n          }\n          var dataSplit = splitInitialData(data, options.visibleDataPointsNum);\n          if (dataSplit.newer.length) {\n            options.dataPointsQueue = dataSplit.newer;\n          }\n          angular.forEach(options.series, function(series) {\n            series.data = [];\n          });\n          if (options.xAxis[0].type === 'time') {\n            angular.forEach(dataSplit.older, function(datum) {\n              angular.forEach(options.series, function(series, seriesIndex) {\n                series.data.push([datum.x, Array.isArray(datum.y) ? datum.y[seriesIndex] : datum.y]);\n              });\n            });\n          } else {\n            var xLabels = [];\n            angular.forEach(dataSplit.older, function(datum) {\n              xLabels.push(datum.x);\n              angular.forEach(options.series, function(series, seriesIndex) {\n                series.data.push(Array.isArray(datum.y) ? datum.y[seriesIndex] : datum.y);\n              });\n            });\n            options.xAxis[0].data = xLabels;\n          }\n        },\n        linkFn: function(scope, toEchartOptionFn) {\n          scope.$watch('data', function(data) {\n            if (data) {\n              var dataArray = Array.isArray(data) ? data : [data];\n              scope.api.addDataPoints(dataArray);\n            }\n          });\n          scope.$watch('options', function(newOptions, oldOptions) {\n            if (!angular.equals(newOptions, oldOptions)) {\n              scope.api.rebuild(toEchartOptionFn(newOptions, scope));\n            }\n          }, true);\n        }\n      };\n    }\n  ]);\nangular.module('dashing.charts.bar', [\n  'dashing.charts.adapter.echarts',\n  'dashing.charts.look_and_feel',\n  'dashing.util'\n])\n  .directive('barChart', ['dashing.charts.look_and_feel', 'dashing.util', '$echarts',\n    function(lookAndFeel, util, $echarts) {\n      function toEchartOptions(dsOptions, scope) {\n        var use = angular.merge({\n          yAxisSplitNum: 3,\n          yAxisShowMinorAxisLine: false,\n          yAxisLabelWidth: 60,\n          yAxisLabelFormatter: $echarts.axisLabelFormatter(''),\n          static: true,\n          rotate: false,\n          xAxisShowLabels: true,\n          margin: {\n            left: undefined,\n            right: undefined,\n            top: undefined,\n            bottom: undefined\n          }\n        }, dsOptions);\n        use = angular.merge({\n          barMaxWidth: use.rotate ? 20 : 16,\n          barMaxSpacing: use.rotate ? 5 : 4,\n          barMinWidth: use.rotate ? 6 : 4,\n          barMinSpacing: use.rotate ? 2 : 1\n        }, use);\n        var data = use.data;\n        if (!Array.isArray(data)) {\n          console.warn({\n            message: 'Initial data is expected to be an array',\n            data: data\n          });\n          data = data ? [data] : [];\n        }\n        $echarts.validateSeriesNames(use, data);\n        if (!Array.isArray(use.colors) || !use.colors.length) {\n          use.colors = lookAndFeel.barChartColorRecommendation(use.seriesNames.length || 1);\n        }\n        var colors = use.colors.map(function(base) {\n          return lookAndFeel.buildColorStates(base);\n        });\n        var axisColor = colors.length > 1 ? '#999' : colors[0].line;\n        var minMargin = 15;\n        var horizontalMargin = Math.max(minMargin, use.yAxisLabelWidth);\n        var options = {\n          height: use.height,\n          width: use.width,\n          tooltip: angular.merge(\n            $echarts.categoryTooltip(use.valueFormatter), {\n              axisPointer: {\n                type: 'shadow',\n                shadowStyle: {\n                  color: 'rgba(225,225,225,0.3)'\n                }\n              }\n            }),\n          grid: angular.merge({\n            borderWidth: 0,\n            x: use.margin.left || horizontalMargin,\n            x2: use.margin.right || horizontalMargin,\n            y: use.margin.top || minMargin,\n            y2: use.margin.bottom || minMargin + 13\n          }, use.grid),\n          xAxis: [{\n            axisLabel: {\n              show: true\n            },\n            axisLine: {\n              show: true,\n              lineStyle: {\n                width: 1,\n                color: axisColor,\n                type: 'dotted'\n              }\n            },\n            axisTick: false,\n            splitLine: false\n          }],\n          yAxis: [{\n            type: 'value',\n            splitNumber: use.yAxisSplitNum,\n            splitLine: {\n              show: use.yAxisShowMinorAxisLine,\n              lineStyle: {\n                color: axisColor,\n                type: 'dotted'\n              }\n            },\n            axisLine: false,\n            axisLabel: {\n              formatter: use.yAxisLabelFormatter\n            }\n          }],\n          series: use.seriesNames.map(function(name, i) {\n            return $echarts.makeDataSeries({\n              type: 'bar',\n              name: name,\n              stack: true,\n              colors: colors[i]\n            });\n          }),\n          color: use.colors\n        };\n        if (use.static) {\n          delete use.visibleDataPointsNum;\n        }\n        $echarts.fillAxisData(options, data, use);\n        if (use.static) {\n          options.visibleDataPointsNum = -1;\n        }\n        if (use.rotate) {\n          var axisSwap = options.xAxis;\n          options.xAxis = angular.copy(options.yAxis);\n          options.xAxis[0].type = options.xAxis[0].type || 'value';\n          options.yAxis = axisSwap;\n          options.yAxis[0].type = options.yAxis[0].type || 'category';\n        }\n        if (!use.xAxisShowLabels) {\n          options.xAxis[0].axisLabel = false;\n          options.grid.y2 = options.grid.y;\n        }\n        if (use.static) {\n          var drawBarMinWidth = use.barMinWidth + use.barMinSpacing;\n          var drawBarMaxWidth = use.barMaxWidth + use.barMaxSpacing;\n          var drawAllBarMinWidth = data.length * drawBarMinWidth;\n          var drawAllBarMaxWidth = data.length * drawBarMaxWidth;\n          var chartHeight = parseInt(use.height);\n          if (use.rotate) {\n            var gridMarginY = options.grid.borderWidth * 2 + options.grid.y + options.grid.y2;\n            if (chartHeight < gridMarginY + drawAllBarMinWidth) {\n              console.info('The chart is too short to hold so many bars, so that we increase the height to ' +\n                (gridMarginY + drawAllBarMinWidth) + 'px for you.');\n              options.height = (gridMarginY + drawAllBarMinWidth) + 'px';\n            } else if (chartHeight > gridMarginY + drawAllBarMaxWidth) {\n              options.height = (gridMarginY + drawAllBarMaxWidth) + 'px';\n            }\n          } else {\n            var gridMarginX = options.grid.borderWidth * 2 + options.grid.x + options.grid.x2;\n            var chartControlWidth = scope.getChartControlWidthFn();\n            var visibleWidthForBars = chartControlWidth - gridMarginX;\n            if (drawAllBarMinWidth > 0 && drawAllBarMinWidth > visibleWidthForBars) {\n              var roundedVisibleWidthForBars = Math.floor(visibleWidthForBars / drawBarMinWidth) * drawBarMinWidth;\n              options.grid.x2 += visibleWidthForBars - roundedVisibleWidthForBars;\n              var scrollbarHeight = 20;\n              var scrollbarGridMargin = 5;\n              options.dataZoom = {\n                show: true,\n                end: roundedVisibleWidthForBars * 100 / drawAllBarMinWidth,\n                realtime: true,\n                height: scrollbarHeight,\n                y: chartHeight - scrollbarHeight - scrollbarGridMargin,\n                handleColor: axisColor\n              };\n              options.dataZoom.fillerColor = util.color.alpha(options.dataZoom.handleColor, 0.08);\n              options.grid.y2 += scrollbarHeight + scrollbarGridMargin * 2;\n            } else if (data.length) {\n              if (visibleWidthForBars > drawAllBarMaxWidth) {\n                options.grid.x2 += chartControlWidth - drawAllBarMaxWidth - gridMarginX;\n              } else if (!angular.isDefined(use.margin.right)) {\n                roundedVisibleWidthForBars = Math.floor(visibleWidthForBars / data.length) * data.length;\n                options.grid.x2 += visibleWidthForBars - roundedVisibleWidthForBars;\n              }\n            }\n          }\n        }\n        return options;\n      }\n      return {\n        restrict: 'E',\n        template: '<echart options=\"::initOptions\" api=\"api\" on-resize=\"handleResize()\"></echart>',\n        scope: {\n          options: '=optionsBind',\n          data: '=datasourceBind'\n        },\n        link: function(scope) {\n          return $echarts.linkFn(scope, toEchartOptions);\n        },\n        controller: ['$scope', '$element',\n          function($scope, $element) {\n            $scope.getChartControlWidthFn = function() {\n              return angular.element($element[0]).children()[0].offsetWidth;\n            };\n            $scope.initOptions = toEchartOptions($scope.options, $scope);\n            $scope.handleResize = function() {\n              $scope.options._dirty = new Date();\n              return true;\n            };\n          }\n        ]\n      };\n    }\n  ]);\nangular.module('dashing.charts.line', [\n  'dashing.charts.adapter.echarts',\n  'dashing.charts.look_and_feel'\n])\n  .directive('lineChart', ['dashing.charts.look_and_feel', '$echarts',\n    function(lookAndFeel, $echarts) {\n      function toEchartOptions(dsOptions) {\n        var use = angular.merge({\n          seriesStacked: true,\n          seriesLineSmooth: false,\n          showLegend: true,\n          yAxisSplitNum: 3,\n          yAxisShowSplitLine: true,\n          yAxisLabelWidth: 60,\n          yAxisLabelFormatter: $echarts.axisLabelFormatter(''),\n          yAxisScaled: false,\n          xAxisShowLabels: true,\n          margin: {\n            left: undefined,\n            right: undefined,\n            top: undefined,\n            bottom: undefined\n          }\n        }, dsOptions);\n        var data = use.data;\n        $echarts.validateSeriesNames(use, data);\n        if (!Array.isArray(use.colors) || !use.colors.length) {\n          use.colors = lookAndFeel.lineChartColorRecommendation(use.seriesNames.length || 1);\n        }\n        var colors = use.colors.map(function(base) {\n          return lookAndFeel.buildColorStates(base);\n        });\n        var axisColor = '#ccc';\n        var borderLineStyle = {\n          length: 4,\n          lineStyle: {\n            width: 1,\n            color: axisColor\n          }\n        };\n        var horizontalMargin = Math.max(15, use.yAxisLabelWidth);\n        var options = {\n          height: use.height,\n          width: use.width,\n          tooltip: angular.merge(\n            $echarts.categoryTooltip(use.valueFormatter), {\n              axisPointer: {\n                type: 'line',\n                lineStyle: {\n                  width: 3,\n                  color: 'rgb(235,235,235)',\n                  type: 'dotted'\n                }\n              }\n            }),\n          grid: angular.merge({\n            borderWidth: 0,\n            x: use.margin.left || horizontalMargin,\n            x2: use.margin.right || horizontalMargin,\n            y: use.margin.top || 20,\n            y2: use.margin.bottom || 25\n          }, use.grid),\n          xAxis: [{\n            type: use.xAxisTypeIsTime ? 'time' : undefined,\n            boundaryGap: use.xAxisBoundaryGap,\n            axisLine: angular.merge({\n              onZero: false\n            }, borderLineStyle),\n            axisTick: borderLineStyle,\n            axisLabel: {\n              show: true\n            },\n            splitLine: false\n          }],\n          yAxis: [{\n            splitNumber: use.yAxisSplitNum,\n            splitLine: {\n              show: use.yAxisShowSplitLine,\n              lineStyle: {\n                color: axisColor,\n                type: 'dotted'\n              }\n            },\n            axisLine: false,\n            axisLabel: {\n              formatter: use.yAxisLabelFormatter\n            },\n            scale: use.yAxisScaled\n          }],\n          series: use.seriesNames.map(function(name, i) {\n            return $echarts.makeDataSeries({\n              name: name,\n              colors: colors[i],\n              stack: use.seriesStacked,\n              smooth: use.seriesLineSmooth,\n              showAllSymbol: use.showAllSymbol,\n              yAxisIndex: Array.isArray(use.seriesYAxisIndex) ?\n                use.seriesYAxisIndex[i] : 0\n            });\n          }),\n          color: use.colors\n        };\n        if (_.contains(use.seriesYAxisIndex, 1)) {\n          var yAxis2 = angular.copy(options.yAxis[0]);\n          if (angular.isFunction(use.yAxis2LabelFormatter)) {\n            yAxis2.axisLabel.formatter = use.yAxis2LabelFormatter;\n          }\n          options.yAxis.push(yAxis2);\n        }\n        $echarts.fillAxisData(options, data, use);\n        if (!use.xAxisShowLabels) {\n          options.xAxis[0].axisLabel = false;\n          options.grid.y2 = options.grid.y;\n        }\n        if (use.xAxisTypeIsTime) {\n          $echarts.timelineChartFix(options, use);\n        }\n        if (options.series.length === 1) {\n          options.yAxis.boundaryGap = [0, 0.1];\n        }\n        var titleHeight = 20;\n        var legendHeight = 16;\n        if (use.title) {\n          options.title = {\n            text: use.title,\n            x: 0,\n            y: 3\n          };\n          options.grid.y += titleHeight;\n        }\n        var addLegend = options.series.length > 1 && use.showLegend;\n        if (addLegend) {\n          options.legend = {\n            show: true,\n            itemWidth: 8,\n            data: options.series.map(function(series) {\n              return series.name;\n            })\n          };\n          options.legend.y = 6;\n          options.grid.y += 14;\n          if (use.title) {\n            options.legend.y += titleHeight;\n            options.grid.y += legendHeight;\n          }\n        }\n        if (addLegend || use.title) {\n          options.grid.y += 12;\n        }\n        return options;\n      }\n      return {\n        restrict: 'E',\n        template: '<echart options=\"::initOptions\" api=\"api\"></echart>',\n        scope: {\n          options: '=optionsBind',\n          data: '=datasourceBind'\n        },\n        link: function(scope) {\n          return $echarts.linkFn(scope, toEchartOptions);\n        },\n        controller: ['$scope',\n          function($scope) {\n            $scope.initOptions = toEchartOptions($scope.options);\n          }\n        ]\n      };\n    }\n  ]);\nangular.module('dashing.charts.look_and_feel', [\n  'dashing.util'\n])\n  .factory('dashing.charts.look_and_feel', ['dashing.util',\n    function(util) {\n      var self = {\n        lineChartColorRecommendation: function(seriesNum) {\n          var colors = util.color.palette;\n          switch (seriesNum) {\n            case 1:\n              return [colors.blue];\n            case 2:\n              return [colors.blue, colors.blueishGreen];\n            default:\n              return util.array.repeatArray([\n                colors.blue,\n                colors.purple,\n                colors.blueishGreen,\n                colors.darkRed,\n                colors.orange\n              ], seriesNum);\n          }\n        },\n        barChartColorRecommendation: function(seriesNum) {\n          var colors = util.color.palette;\n          switch (seriesNum) {\n            case 1:\n              return [colors.lightBlue];\n            case 2:\n              return [colors.blue, colors.darkBlue];\n            default:\n              return util.array.repeatArray([\n                colors.lightGreen,\n                colors.darkGray,\n                colors.lightBlue,\n                colors.blue,\n                colors.darkBlue\n              ], seriesNum);\n          }\n        },\n        ringChartColorRecommendation: function(seriesNum) {\n          return self.barChartColorRecommendation(seriesNum);\n        },\n        buildColorStates: function(base) {\n          return {\n            line: base,\n            area: util.color.lighter(base, -0.92),\n            hover: util.color.lighter(base, 0.15)\n          };\n        }\n      };\n      return self;\n    }\n  ]);\nangular.module('dashing.charts.metrics_sparkline', [\n  'dashing.charts.sparkline',\n  'dashing.metrics'\n])\n  .directive('metricsSparklineChartTd', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'charts/metrics_sparkline_td.html',\n      scope: {\n        caption: '@',\n        help: '@',\n        current: '@',\n        unit: '@',\n        subText: '@',\n        options: '=optionsBind',\n        data: '=datasourceBind'\n      }\n    };\n  });\nangular.module('dashing.charts.ring', [\n  'dashing.charts.adapter.echarts',\n  'dashing.charts.look_and_feel'\n])\n  .directive('ringChart', function() {\n    return {\n      restrict: 'E',\n      template: '<echart options=\"::initOptions\" api=\"api\"></echart>',\n      scope: {\n        options: '=optionsBind',\n        data: '=datasourceBind'\n      },\n      link: function(scope) {\n        scope.$watch('data', function(data) {\n          scope.api.updateOption({\n            series: [{\n              data: [{\n                value: data.available.value\n              }, {\n                value: data.used.value\n              }]\n            }]\n          });\n        });\n      },\n      controller: ['$scope', '$element', 'dashing.charts.look_and_feel',\n        function($scope, $element, lookAndFeel) {\n          var use = angular.merge({\n            color: lookAndFeel.ringChartColorRecommendation(1)[0],\n            thickness: 0.25\n          }, $scope.options);\n          if (!angular.isNumber(use.thickness) || use.thickness > 1 || use.thickness <= 0) {\n            console.warn({\n              message: 'Ignored invalid thickness value',\n              value: use.thickness\n            });\n            use.thickness = 0.25;\n          }\n          var data = use.data || $scope.data;\n          if (!data) {\n            console.warn('Need data to render the ring chart.');\n          }\n          var colors = lookAndFeel.buildColorStates(use.color);\n          var padding = 8;\n          var outerRadius = (parseInt(use.height) - 30 - padding * 2) / 2;\n          var innerRadius = Math.floor(outerRadius * (1 - use.thickness));\n          var innerTextFontSize = Math.floor(28 * innerRadius / 39);\n          if (innerTextFontSize < 12) {\n            console.warn('Please increase the height to get a better visual experience.');\n          }\n          var itemStyleBase = {\n            normal: {\n              color: 'rgb(232,239,240)',\n              label: {\n                show: true,\n                position: 'center'\n              },\n              labelLine: false\n            }\n          };\n          var options = {\n            height: use.height,\n            width: use.width,\n            grid: {\n              borderWidth: 0\n            },\n            xAxis: [{\n              show: false,\n              data: [0]\n            }],\n            legend: {\n              selectedMode: false,\n              itemGap: 20,\n              itemWidth: 13,\n              y: 'bottom',\n              data: [data.used.label, data.available.label].map(function(label) {\n                return {\n                  name: label,\n                  textStyle: {\n                    fontWeight: 500\n                  },\n                  icon: 'a'\n                };\n              })\n            },\n            series: [{\n              type: 'pie',\n              center: ['50%', outerRadius + padding],\n              radius: [innerRadius, outerRadius],\n              data: [{\n                name: data.available.label,\n                value: data.available.value,\n                itemStyle: itemStyleBase\n              }, {\n                name: data.used.label,\n                value: data.used.value,\n                itemStyle: angular.merge({}, itemStyleBase, {\n                  normal: {\n                    color: colors.line\n                  }\n                })\n              }]\n            }]\n          };\n          options.series[0].itemStyle = {\n            normal: {\n              label: {\n                formatter: function() {\n                  return Math.round($scope.data.used.value * 100 /\n                    ($scope.data.used.value + $scope.data.available.value)) + '%';\n                },\n                textStyle: {\n                  color: '#111',\n                  fontSize: Math.floor(28 * innerRadius / 39),\n                  fontWeight: 500,\n                  baseline: 'middle'\n                }\n              }\n            }\n          };\n          if (use.title) {\n            options.series[0].center[0] = outerRadius + padding;\n            options.legend.x = padding;\n            options.title = {\n              text: use.title,\n              x: (outerRadius + padding) * 2 + padding + 4,\n              y: outerRadius + padding + 4,\n              textStyle: {\n                fontSize: 12,\n                fontWeight: 500,\n                color: '#666'\n              }\n            };\n            var left = options.title.x + 14;\n            var top = options.title.y - 48;\n            var total = $scope.data.used.value + $scope.data.available.value;\n            var unit = $scope.data.used.unit;\n            var unselectable =\n              '-webkit-touch-callout: none;' +\n              '-webkit-user-select: none;' +\n              '-khtml-user-select: none;' +\n              '-moz-user-select: none;' +\n              '-ms-user-select: none;' +\n              'user-select: none;';\n            angular.element($element[0]).append([\n              '<div style=\"position: absolute; left: ' + left + 'px; top: ' + top + 'px\">',\n              '<p style=\"cursor: default; ' + unselectable + '\">',\n              '<span style=\"font-size: 40px; font-weight: 500\">' + total + '</span>', (unit ? ('<span style=\"font-size: 15px; font-weight: 700\">' + unit + '</span>') : ''),\n              '</p>',\n              '</div>'\n            ].join(' '));\n          }\n          $scope.initOptions = options;\n        }\n      ]\n    };\n  });\nangular.module('dashing.charts.sparkline', [\n  'dashing.charts.adapter.echarts',\n  'dashing.charts.look_and_feel'\n])\n  .directive('sparklineChart', ['dashing.charts.look_and_feel', '$echarts',\n    function(lookAndFeel, $echarts) {\n      function toEchartOptions(dsOptions) {\n        var use = angular.merge({\n          color: lookAndFeel.lineChartColorRecommendation(1)[0],\n          yAxisBoundaryGap: [0, 0.5]\n        }, dsOptions);\n        if (use.xAxisTypeIsTime) {\n          console.warn('Echarts does not have a good experience for time series, so we fallback to category. ' +\n            'Please track https://github.com/ecomfe/echarts/issues/1954');\n          use.xAxisTypeIsTime = false;\n        }\n        var colors = lookAndFeel.buildColorStates(use.color);\n        var defaultMargin = 5;\n        var options = {\n          height: use.height,\n          width: use.width,\n          tooltip: $echarts.categoryTooltip(use.valueFormatter),\n          grid: angular.merge({\n            borderWidth: 1,\n            x: defaultMargin,\n            y: defaultMargin,\n            x2: defaultMargin,\n            y2: 1\n          }, use.grid),\n          xAxis: [{\n            type: use.xAxisTypeIsTime ? 'time' : undefined,\n            boundaryGap: false,\n            axisLine: false,\n            axisLabel: false,\n            splitLine: false\n          }],\n          yAxis: [{\n            boundaryGap: use.yAxisBoundaryGap,\n            show: false\n          }],\n          series: [$echarts.makeDataSeries({\n            colors: colors,\n            stack: true\n          })]\n        };\n        if (use.series0Type === 'bar') {\n          options.grid.borderWidth = 0;\n          options.grid.y2 = 0;\n          options.xAxis[0].boundaryGap = true;\n          options.series[0].type = 'bar';\n        }\n        var data = use.data;\n        $echarts.fillAxisData(options, data, use);\n        return options;\n      }\n      return {\n        restrict: 'E',\n        template: '<echart options=\"::initOptions\" api=\"api\"></echart>',\n        scope: {\n          options: '=optionsBind',\n          data: '=datasourceBind'\n        },\n        link: function(scope) {\n          return $echarts.linkFn(scope, toEchartOptions);\n        },\n        controller: ['$scope',\n          function($scope) {\n            $scope.initOptions = toEchartOptions($scope.options);\n          }\n        ]\n      };\n    }\n  ]);\nangular.module('dashing.contextmenu', [\n  'mgcrea.ngStrap.dropdown'\n])\n  .factory('$contextmenu', function() {\n    return {\n      popup: function(elem, position) {\n        var elem0 = angular.element(elem);\n        elem0.css({\n          left: position.x + 'px',\n          top: position.y + 'px'\n        });\n        elem0.triggerHandler('click');\n      }\n    };\n  });\nangular.module('dashing.dialogs', [\n  'mgcrea.ngStrap.modal'\n])\n  .factory('$dialogs', ['$modal', 'dashing.i18n',\n    function($modal, i18n) {\n      function createModalDialog(options, onClose) {\n        var modalCloseEventName = 'modal.onclose';\n        var dialog = $modal(angular.merge({\n          show: true,\n          backdrop: 'static',\n          controller: ['$scope',\n            function($scope) {\n              $scope.text = options.text;\n              var plainContent = options.content.replace(/<[^>]+>/gm, '');\n              $scope.size = plainContent.length <= 60 ? 'modal-sm' : '';\n              $scope.close = function(modalValue) {\n                $scope.$emit(modalCloseEventName, {\n                  modalValue: modalValue\n                });\n                $scope.$hide();\n              }\n            }\n          ]\n        }, options));\n        if (angular.isFunction(onClose)) {\n          dialog.$scope.$on(modalCloseEventName, function(_, values) {\n            onClose(values.modalValue);\n          });\n        }\n        return dialog;\n      }\n      return {\n        confirm: function(text, onConfirm) {\n          var options = {\n            templateUrl: 'dialogs/confirmation.html',\n            title: i18n.confirmationDialogTitle,\n            text: {\n              yesButton: i18n.confirmationYesButtonText,\n              noButton: i18n.confirmationNoButtonText\n            },\n            content: text\n          };\n          var handleCloseFn = function(modalValue) {\n            if (modalValue > 0) {\n              onConfirm();\n            }\n          };\n          createModalDialog(options, handleCloseFn);\n        },\n        notice: function(text, title) {\n          var options = {\n            templateUrl: 'dialogs/notification.html',\n            title: title || i18n.notificationDialogTitle,\n            text: {\n              closeButton: i18n.closeButtonText\n            },\n            content: text\n          };\n          createModalDialog(options);\n        }\n      };\n    }\n  ]);\nangular.module('dashing.filters.any', [])\n  .filter('any', function() {\n    return function(items, props) {\n      if (!Array.isArray(items)) {\n        return items;\n      }\n      return items.filter(function(item) {\n        var keys = Object.keys(props);\n        for (var i = 0; i < keys.length; i++) {\n          var prop = keys[i];\n          var subtext = angular.lowercase(props[prop] || '');\n          var text = angular.lowercase(item[prop] || '');\n          if (text.indexOf(subtext) !== -1) {\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n  });\nangular.module('dashing.filters.duration', [\n  'dashing.util'\n])\n  .filter('duration', ['dashing.util',\n    function(util) {\n      return function(millis, compact) {\n        return util.text.toHumanReadableDuration(millis, compact);\n      };\n    }\n  ]);\nangular.module('dashing.forms.form_control', [\n  'ngSanitize',\n  'dashing.filters.any',\n  'dashing.util.validation',\n  'mgcrea.ngStrap',\n  'ui.select'\n])\n  .directive('formControl', ['dashing.util.validation',\n    function(validation) {\n      function buildChoicesForSelect(choices) {\n        var result = [];\n        angular.forEach(choices, function(choice, value) {\n          var item = {\n            value: value\n          };\n          if (angular.isString(choice)) {\n            item.text = choice;\n          } else {\n            item.text = choice.text;\n            if (choice.hasOwnProperty('subtext')) {\n              item.subtext = choice.subtext;\n            }\n          }\n          result.push(item);\n        });\n        return result;\n      }\n      function buildChoicesForRadioGroup(choices) {\n        var result = [];\n        angular.forEach(choices, function(choice, value) {\n          result.push({\n            value: value,\n            text: choice\n          });\n        });\n        return result;\n      }\n      function buildChoicesForDropDownMenu(choices, onSelect) {\n        return choices.map(function(choice) {\n          if (angular.isString(choice)) {\n            choice = {\n              text: choice\n            };\n          }\n          return {\n            text: (choice.icon ? '<i class=\"' + choice.icon + '\"></i> ' : '') + choice.text,\n            click: function() {\n              onSelect(choice.text);\n            }\n          };\n        });\n      }\n      function fixDateTimeControlMarginResponsive(scope) {\n        var widthBreakPoint = 768;\n        scope.$watch(function() {\n          return window.innerWidth;\n        }, function(width) {\n          scope.timeControlLeftMargin = width < widthBreakPoint ? '15px' : '0';\n          scope.timeControlTopMargin = width < widthBreakPoint ? '4px' : '0';\n        });\n        window.onresize = function() {\n          scope.$apply();\n        };\n      }\n      return {\n        restrict: 'E',\n        templateUrl: 'forms/form_controls.html',\n        replace: true,\n        scope: {\n          help: '@',\n          value: '=ngModel',\n          invalid: '=?'\n        },\n        link: function(scope, elem, attrs) {\n          scope.labelStyleClass = attrs.labelStyleClass || 'col-sm-3';\n          scope.controlStyleClass = attrs.controlStyleClass || 'col-sm-9';\n          scope.choiceIconStyleClass = attrs.choiceIconStyleClass || 'glyphicon glyphicon-menu-hamburger';\n          scope.label = attrs.label;\n          scope.renderAs = attrs.type;\n          scope.pristine = true;\n          scope.invalid = attrs.required;\n          switch (attrs.type) {\n            case 'class':\n              scope.renderAs = 'text';\n              scope.validateFn = validation.class;\n              break;\n            case 'choices':\n              scope.placeholder = attrs.searchPlaceholder;\n              scope.choices = buildChoicesForSelect(eval('(' + attrs.choices + ')'));\n              scope.allowSearchInChoices = attrs.hasOwnProperty('searchEnabled') ?\n                (attrs.searchEnabled === 'true') : Object.keys(scope.choices).length >= 5;\n              scope.allowClearSelection = !attrs.required;\n              break;\n            case 'radio':\n              scope.choices = buildChoicesForRadioGroup(eval('(' + attrs.choices + ')'));\n              scope.buttonStyleClass = attrs.btnStyleClass || 'btn-sm';\n              scope.toggle = function(value) {\n                scope.value = value;\n              };\n              break;\n            case 'multi-checks':\n              scope.choices = eval('(' + attrs.choices + ')');\n              if (!Array.isArray(scope.choices)) {\n                scope.choices = [attrs.choices];\n              }\n              if (!Array.isArray(scope.value)) {\n                scope.value = scope.choices.map(function() {\n                  return false;\n                });\n              }\n              break;\n            case 'check':\n              scope.text = scope.label;\n              scope.label = '';\n              break;\n            case 'integer':\n              scope.min = attrs.min;\n              scope.max = attrs.max;\n              scope.validateFn = function(value) {\n                return validation.integerInRange(value, attrs.min, attrs.max);\n              };\n              break;\n            case 'datetime':\n              scope.dateControlStyleClass = attrs.dateControlStyleClass || 'col-sm-5';\n              scope.timeControlStyleClass = attrs.timeControlStyleClass || 'col-sm-4';\n              fixDateTimeControlMarginResponsive(scope);\n              scope.fillDefaultDate = function() {\n                if (!scope.dateValue) {\n                  scope.dateValue = new Date();\n                }\n              };\n              scope.fillDefaultTime = function() {\n                if (!scope.timeValue) {\n                  var now = new Date();\n                  now.setSeconds(0);\n                  now.setMilliseconds(0);\n                  scope.timeValue = now;\n                }\n              };\n              scope.dateInputInvalid = false;\n              scope.timeInputInvalid = false;\n              scope.$watch('dateValue', function(newVal, oldVal) {\n                scope.dateInputInvalid = angular.isUndefined(newVal) && !angular.isUndefined(oldVal);\n                scope.invalid = scope.dateInputInvalid || scope.timeInputInvalid;\n                if (newVal) {\n                  scope.value = [newVal, scope.timeValue];\n                }\n              });\n              scope.$watch('timeValue', function(newVal, oldVal) {\n                scope.timeInputInvalid = angular.isUndefined(newVal) && !angular.isUndefined(oldVal);\n                scope.invalid = scope.dateInputInvalid || scope.timeInputInvalid;\n                if (newVal) {\n                  scope.value = [scope.dateValue, newVal];\n                }\n              });\n              scope.$watchCollection('value', function(val) {\n                if (Array.isArray(val) && val.length === 2) {\n                  scope.dateValue = val[0];\n                  scope.timeValue = val[1];\n                }\n              });\n              break;\n            case 'upload':\n              scope.acceptPattern = attrs.acceptPattern;\n              scope.filename = '';\n              scope.$watch('files', function(files) {\n                if (Array.isArray(files) && files.length) {\n                  scope.value = files[0];\n                  scope.filename = files[0].name;\n                }\n              });\n              scope.openUpload = function() {\n                var spans = elem.find('span');\n                if (spans.length > 2) {\n                  var uploadButton = spans[spans.length - 2];\n                  uploadButton.click();\n                }\n              };\n              scope.clearSelection = function() {\n                scope.value = null;\n                scope.filename = '';\n              };\n              break;\n            default:\n              scope.hideMenuCaret = ['true', '1'].indexOf(String(attrs.hideMenuCaret)) !== -1;\n              break;\n          }\n          if (scope.renderAs === 'text' && attrs.choices) {\n            scope.choicesMenu = buildChoicesForDropDownMenu(\n              eval('(' + attrs.choices + ')'),\n              function(choice) {\n                scope.value = choice;\n              });\n          }\n          scope.$watch('value', function(value) {\n            scope.pristine = (attrs.type !== 'integer') && (value || '').length === 0;\n            scope.invalid =\n              (angular.isFunction(scope.validateFn) && !scope.validateFn(value)) ||\n              (attrs.required && scope.pristine);\n          });\n        }\n      };\n    }\n  ]);\nangular.module('dashing.forms.searchbox', [])\n  .directive('searchbox', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'forms/searchbox.html',\n      scope: {\n        placeholder: '@',\n        ngModel: '='\n      },\n      controller: ['$scope',\n        function($scope) {\n          $scope.hint = $scope.placeholder;\n          $scope.hideHint = function() {\n            $scope.hint = '';\n          };\n          $scope.restoreHint = function() {\n            if (!$scope.ngModel) {\n              $scope.hint = $scope.placeholder;\n            }\n          };\n        }\n      ]\n    };\n  });\nangular.module('dashing')\n  .constant('dashing.i18n', {\n    emptySearchResult: 'No results matched your search :-(',\n    paginationSummary: 'Showing {{ stRange.from }}-{{ stRange.to }} of {{ totalItemCount }} records',\n    confirmationDialogTitle: 'Confirmation',\n    confirmationYesButtonText: 'Yes',\n    confirmationNoButtonText: 'No, Thanks',\n    notificationDialogTitle: 'Notification',\n    closeButtonText: 'Close'\n  });\nangular.module('dashing.metrics', [])\n  .directive('metrics', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'metrics/metrics.html',\n      scope: {\n        caption: '@',\n        value: '@',\n        unit: '@',\n        unitPlural: '@',\n        subText: '@',\n        help: '@',\n        remarkType: '@',\n        clickHelp: '&'\n      }\n    };\n  });\nangular.module('dashing.progressbar', [])\n  .directive('progressbar', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'progressbar/progressbar.html',\n      scope: {\n        current: '@',\n        max: '@',\n        colorMapperFn: '='\n      },\n      link: function(scope, elem, attrs) {\n        attrs.$observe('current', function(current) {\n          updateUsageAndClass(Number(current), Number(attrs.max));\n        });\n        attrs.$observe('max', function(max) {\n          updateUsageAndClass(Number(attrs.current), Number(max));\n        });\n        function updateUsageAndClass(current, max) {\n          scope.usage = max > 0 ? Math.round(current * 100 / max) : -1;\n          scope.usageClass = (scope.colorMapperFn ?\n            scope.colorMapperFn : defaultColorMapperFn)(scope.usage);\n        }\n        function defaultColorMapperFn(usage) {\n          return 'progress-bar-' +\n            (usage < 50 ? 'info' : (usage < 75 ? 'warning' : 'danger'));\n        }\n      }\n    };\n  });\nangular.module('dashing.property.number', [\n  'dashing.util'\n])\n  .directive('number', ['$filter', 'dashing.util',\n    function($filter, util) {\n      return {\n        restrict: 'E',\n        templateUrl: 'property/number.html',\n        scope: {\n          raw: '@'\n        },\n        link: function(scope, elem, attrs) {\n          var readable = ['true', '1'].indexOf(String(attrs.readable)) !== -1;\n          attrs.$observe('raw', function(raw) {\n            if (readable) {\n              var hr = util.text.toHumanReadableNumber(Number(raw), 1024);\n              scope.value = hr.value.toFixed(0);\n              scope.unit = hr.modifier + attrs.unit;\n            } else {\n              scope.value = $filter('number')(raw, Number(attrs.precision) || 0);\n              scope.unit = attrs.unit;\n            }\n          });\n        }\n      };\n    }\n  ]);\nangular.module('dashing.property', [\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('property', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'property/property.html',\n      replace: false,\n      scope: {\n        value: '=valueBind',\n        renderer: '@'\n      },\n      controller: ['$scope', 'dsPropertyRenderer',\n        function($scope, renderer) {\n          if ($scope.renderer === renderer.BYTES) {\n            console.warn('deprecated: should use renderer NUMBER instead');\n            $scope.renderer = renderer.NUMBER;\n          }\n          $scope.$watch('value', function(value) {\n            if (angular.isObject(value)) {\n              switch ($scope.renderer) {\n                case renderer.LINK:\n                  if (!value.href) {\n                    $scope.href = value.text;\n                  }\n                  break;\n                case renderer.BUTTON:\n                  if (value.href && !value.click) {\n                    $scope.click = function() {\n                      if (value.target) {\n                        var win = window.open(value.href, value.target);\n                        win.focus();\n                      } else {\n                        location.href = value.href;\n                      }\n                    };\n                  }\n                  break;\n              }\n              if (value.hasOwnProperty('value')) {\n                console.warn({\n                  message: 'Ignore `value.value`, because it is a reversed field.',\n                  object: value\n                });\n                delete value.value;\n              }\n              angular.merge($scope, value);\n            } else if (angular.isNumber(value)) {\n              if ($scope.renderer === renderer.NUMBER) {\n                $scope.raw = value;\n              }\n            }\n          });\n        }\n      ]\n    };\n  })\n  .constant('dsPropertyRenderer', {\n    BUTTON: 'Button',\n    BYTES: 'Bytes',\n    DATETIME: 'DateTime',\n    DURATION: 'Duration',\n    INDICATOR: 'Indicator',\n    LINK: 'Link',\n    NUMBER: 'Number',\n    NUMBER1: 'Number1',\n    NUMBER2: 'Number2',\n    PROGRESS_BAR: 'ProgressBar',\n    TAG: 'Tag',\n    TEXT: undefined\n  });\nangular.module('dashing.remark', [\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('remark', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'remark/remark.html',\n      scope: {\n        tooltip: '@',\n        placement: '@',\n        type: '@',\n        trigger: '@'\n      },\n      link: function(scope) {\n        scope.$watch('type', function(type) {\n          switch (type) {\n            case 'info':\n              scope.styleClass = 'glyphicon glyphicon-info-sign remark-icon';\n              break;\n            case 'warning':\n              scope.styleClass = 'glyphicon glyphicon-warning-sign remark-icon-warning';\n              break;\n            default:\n              scope.styleClass = 'glyphicon glyphicon-question-sign remark-icon';\n              break;\n          }\n        });\n      }\n    };\n  });\nangular.module('dashing.state.indicator', [\n  'dashing.util',\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('indicator', ['dashing.util',\n    function(util) {\n      return {\n        restrict: 'E',\n        templateUrl: 'state/indicator.html',\n        scope: {\n          tooltip: '@',\n          shape: '@'\n        },\n        link: function(scope, elem, attrs) {\n          if (!attrs.condition) {\n            attrs.condition = '';\n          }\n          attrs.$observe('condition', function(condition) {\n            scope.colorStyle = util.color.conditionToColor(condition);\n          });\n          attrs.$observe('tooltip', function(tooltip) {\n            scope.cursorStyle = tooltip ? 'pointer' : 'default';\n          });\n        }\n      };\n    }\n  ]);\nangular.module('dashing.state.tag', [\n  'dashing.util',\n  'mgcrea.ngStrap.tooltip'\n])\n  .directive('tag', ['dashing.util',\n    function(util) {\n      return {\n        restrict: 'E',\n        templateUrl: 'state/tag.html',\n        scope: {\n          href: '@',\n          text: '@',\n          tooltip: '@'\n        },\n        link: function(scope, elem, attrs) {\n          if (!attrs.condition) {\n            attrs.condition = '';\n          }\n          attrs.$observe('condition', function(condition) {\n            scope.labelColorClass = util.bootstrap.conditionToBootstrapLabelClass(condition);\n          });\n          attrs.$observe('tooltip', function(tooltip) {\n            if (!scope.href) {\n              scope.cursorStyle = tooltip ? 'pointer' : 'default';\n            }\n          });\n        }\n      };\n    }\n  ]);\nangular.module('dashing.tables.property_table', [])\n  .directive('propertyTable', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'tables/property_table/property_table.html',\n      scope: {\n        caption: '@',\n        captionTooltip: '@',\n        subCaption: '@',\n        props: '=propsBind',\n        propNameClass: '@',\n        propValueClass: '@'\n      }\n    };\n  });\nangular.module('dashing.tables.property_table.builder', [])\n  .factory('$propertyTableBuilder', ['dsPropertyRenderer',\n    function(renderer) {\n      var PB = function(renderer, title) {\n        this.props = renderer ? {\n          renderer: renderer\n        } : {};\n        if (title) {\n          this.title(title);\n        }\n      };\n      PB.prototype.title = function(title) {\n        this.props.name = title;\n        return this;\n      };\n      PB.prototype.help = function(help) {\n        this.props.help = help;\n        return this;\n      };\n      PB.prototype.value = function(value) {\n        this.props.value = value;\n        return this;\n      };\n      PB.prototype.values = function(values) {\n        if (!Array.isArray(values)) {\n          console.warn('values must be an array');\n          values = [values];\n        }\n        this.props.values = values;\n        return this;\n      };\n      PB.prototype.done = function() {\n        return this.props;\n      };\n      return {\n        button: function(title) {\n          return new PB(renderer.BUTTON, title);\n        },\n        bytes: function(title) {\n          console.warn('deprecated: should use number() instead');\n          return new PB(renderer.BYTES, title);\n        },\n        datetime: function(title) {\n          return new PB(renderer.DATETIME, title);\n        },\n        duration: function(title) {\n          return new PB(renderer.DURATION, title);\n        },\n        indicator: function(title) {\n          return new PB(renderer.INDICATOR, title);\n        },\n        link: function(title) {\n          return new PB(renderer.LINK, title);\n        },\n        number: function(title) {\n          return new PB(renderer.NUMBER, title);\n        },\n        number1: function(title) {\n          return new PB(renderer.NUMBER1, title);\n        },\n        number2: function(title) {\n          return new PB(renderer.NUMBER2, title);\n        },\n        progressbar: function(title) {\n          return new PB(renderer.PROGRESS_BAR, title);\n        },\n        tag: function(title) {\n          return new PB(renderer.TAG, title);\n        },\n        text: function(title) {\n          return new PB(renderer.TEXT, title);\n        },\n        $update: function(target, values) {\n          angular.forEach(values, function(value, i) {\n            var field = Array.isArray(value) ? 'values' : 'value';\n            target[i][field] = value;\n          });\n          return target;\n        }\n      };\n    }\n  ]);\nangular.module('dashing.tables.sortable_table', [\n  'smart-table',\n  'dashing.property',\n  'dashing.util'\n])\n  .directive('sortableTable', ['dsPropertyRenderer', 'dashing.util', 'dashing.i18n',\n    function(renderer, util, i18n) {\n      return {\n        restrict: 'E',\n        templateUrl: 'tables/sortable_table/sortable_table.html',\n        transclude: true,\n        scope: {\n          caption: '@',\n          captionTooltip: '@',\n          subCaption: '@',\n          pagination: '@',\n          columns: '=columnsBind',\n          records: '=recordsBind',\n          search: '=searchBind',\n          emptySearchResult: '@'\n        },\n        link: function(scope, elem) {\n          var searchControl = elem.find('input')[0];\n          scope.$watch('search', function(val) {\n            searchControl.value = val || '';\n            angular.element(searchControl).triggerHandler('input');\n          });\n          scope.emptySearchResult = scope.emptySearchResult || i18n.emptySearchResult;\n          scope.$watch('columns', function(columns) {\n            if (!Array.isArray(columns)) {\n              console.warn('Failed to create table, until columns are defined.');\n              return;\n            }\n            scope.columnStyleClass = columns.map(function(column) {\n              function addStyleClass(dest, clazz, condition) {\n                if (condition) {\n                  dest.push(clazz);\n                }\n              }\n              var array = [];\n              addStyleClass(array, column.styleClassArray.join(' '), column.styleClassArray.length);\n              addStyleClass(array, 'text-nowrap', Array.isArray(column.key) && !column.vertical);\n              return array.join(' ');\n            });\n            var possibleStripeColumns = columns.map(function(column) {\n              if (!Array.isArray(column.key) && column.renderer === renderer.INDICATOR) {\n                return column.key;\n              }\n            });\n            scope.bgColorForStripeFix = function(index, record) {\n              var key = possibleStripeColumns[index];\n              if (key) {\n                var cell = record[key];\n                if (cell.shape === 'stripe') {\n                  return util.color.conditionToColor(cell.condition);\n                }\n              }\n            };\n            scope.multipleRendererColumnsRenderers = columns.map(function(column) {\n              if (!Array.isArray(column.key)) {\n                return null;\n              }\n              if (Array.isArray(column.renderer)) {\n                if (column.renderer.length !== column.key.length) {\n                  console.warn('Every column key should have a renderer, or share one renderer.');\n                }\n                return column.renderer;\n              }\n              return column.key.map(function() {\n                return column.renderer;\n              });\n            });\n          });\n          scope.hasRecords = function() {\n            return scope.search || (Array.isArray(scope.records) && scope.records.length > 0);\n          };\n          scope.isArray = Array.isArray;\n        }\n      };\n    }\n  ])\n.directive('stSummary', ['dashing.i18n',\n  function(i18n) {\n    return {\n      require: '^stTable',\n      template: i18n.paginationSummary,\n      link: function(scope, element, attrs, stTable) {\n        scope.stRange = {\n          from: null,\n          to: null\n        };\n        scope.$watch('currentPage', updateText);\n        scope.$watch('totalItemCount', updateText);\n        function updateText() {\n          var pagination = stTable.tableState().pagination;\n          if (pagination.totalItemCount === 0) {\n            scope.stRange.from = 0;\n            scope.stRange.to = 0;\n          } else {\n            scope.stRange.from = pagination.start + 1;\n            scope.stRange.to = scope.currentPage === pagination.numberOfPages ?\n              pagination.totalItemCount : (scope.stRange.from + scope.stItemsByPage - 1);\n          }\n        }\n      }\n    };\n  }\n])\n  .config(['stConfig',\n    function(stConfig) {\n      stConfig.sort.skipNatural = true;\n      stConfig.sort.delay = -1;\n    }\n  ]);\nangular.module('dashing.tables.sortable_table.builder', [\n  'dashing.property',\n  'dashing.util'\n])\n  .factory('$sortableTableBuilder', ['dashing.util', 'dsPropertyRenderer',\n    function(util, renderer) {\n      var CB = function(renderer, title) {\n        this.props = renderer ? {\n          renderer: renderer\n        } : {};\n        this.props.styleClassArray = [];\n        if (title) {\n          this.title(title);\n        }\n      };\n      CB.prototype.title = function(title) {\n        this.props.name = title;\n        return this;\n      };\n      CB.prototype.key = function(key) {\n        this.props.key = key;\n        return this;\n      };\n      CB.prototype.canSort = function(overrideSortKey) {\n        if (!overrideSortKey) {\n          if (!this.props.key) {\n            console.warn('The column does not have a key. Call `.key(\"some\")` first!');\n            return;\n          } else if (Array.isArray(this.props.key)) {\n            console.warn('Multiple keys found. We use the first key for sorting by default.');\n            overrideSortKey = this.props.key[0];\n          }\n        }\n        this.props.sortKey = overrideSortKey || this.props.key;\n        if (this.props.sortKey === this.props.key) {\n          switch (this.props.renderer) {\n            case renderer.LINK:\n              this.props.sortKey += '.text';\n              break;\n            case renderer.INDICATOR:\n            case renderer.TAG:\n              this.props.sortKey += '.condition';\n              break;\n            case renderer.PROGRESS_BAR:\n              this.props.sortKey += '.usage';\n              break;\n            case renderer.BYTES:\n              this.props.sortKey += '.raw';\n              break;\n            case renderer.BUTTON:\n              console.warn('\"%s\" column is not sortable.');\n              return;\n            default:\n          }\n        }\n        return this;\n      };\n      CB.prototype.sortDefault = function(descent) {\n        if (!this.props.sortKey) {\n          console.warn('Specify a sort key or define column key first!');\n          return;\n        }\n        this.props.defaultSort = descent ? 'reverse' : true;\n        return this;\n      };\n      CB.prototype.sortDefaultDescent = function() {\n        return this.sortDefault(true);\n      };\n      CB.prototype.styleClass = function(styleClass) {\n        var styles = styleClass.split(' ');\n        angular.forEach(styles, function(style) {\n          if (this.props.styleClassArray.indexOf(style) === -1) {\n            this.props.styleClassArray.push(style);\n          }\n        }, this);\n        return this;\n      };\n      CB.prototype.textRight = function() {\n        this.styleClass('text-right');\n        return this;\n      };\n      CB.prototype.textLeft = function() {\n        var i = this.props.styleClassArray.indexOf('text-right');\n        if (i !== -1) {\n          this.props.styleClassArray.splice(i, 1);\n        }\n        return this;\n      };\n      CB.prototype.sortBy = function(sortKey) {\n        this.props.sortKey = sortKey;\n        return this;\n      };\n      CB.prototype.unit = function(unit) {\n        this.props.unit = unit;\n        return this;\n      };\n      CB.prototype.help = function(help) {\n        this.props.help = help;\n        return this;\n      };\n      CB.prototype.vertical = function() {\n        if (Array.isArray(this.props.key)) {\n          this.props.vertical = true;\n        }\n        return this;\n      };\n      CB.prototype.done = function() {\n        return this.props;\n      };\n      function arrayKeyEqual(lhs, rhs, key) {\n        var equal = true;\n        angular.forEach(rhs, function(value, i) {\n          var one = lhs[i];\n          if (!one.hasOwnProperty(key) || one.key !== rhs.key) {\n            equal = false;\n            return false;\n          }\n        });\n        return equal;\n      }\n      return {\n        button: function(title) {\n          return new CB(renderer.BUTTON, title);\n        },\n        bytes: function(title) {\n          console.warn('deprecated: should use number instead');\n          return (new CB(renderer.BYTES, title)).textRight();\n        },\n        datetime: function(title) {\n          return new CB(renderer.DATETIME, title);\n        },\n        duration: function(title) {\n          return new CB(renderer.DURATION, title);\n        },\n        indicator: function(title) {\n          return new CB(renderer.INDICATOR, title);\n        },\n        link: function(title) {\n          return new CB(renderer.LINK, title);\n        },\n        multiple: function(title, renderers) {\n          return new CB(renderers, title);\n        },\n        number: function(title) {\n          return (new CB(renderer.NUMBER, title)).textRight();\n        },\n        number1: function(title) {\n          return (new CB(renderer.NUMBER1, title)).textRight();\n        },\n        number2: function(title) {\n          return (new CB(renderer.NUMBER2, title)).textRight();\n        },\n        progressbar: function(title) {\n          return new CB(renderer.PROGRESS_BAR, title);\n        },\n        tag: function(title) {\n          return new CB(renderer.TAG, title);\n        },\n        text: function(title) {\n          return new CB(renderer.TEXT, title);\n        },\n        $update: function(target, values, keyToCheck) {\n          if ((target || []).length !== (values || []).length) {\n            return values;\n          }\n          if (angular.isString(keyToCheck) && !arrayKeyEqual(target, values, keyToCheck)) {\n            return values;\n          }\n          angular.forEach(values, function(value, i) {\n            target[i] = value;\n          });\n          return target;\n        },\n        $check: function(cols, model) {\n          angular.forEach(cols, function(col) {\n            var keys = util.array.ensureArray(col.key);\n            angular.forEach(keys, function(key) {\n              if (!model.hasOwnProperty(key)) {\n                console.warn('Model does not have a property matches column key `' + col + '`.');\n              }\n            });\n          });\n        }\n      };\n    }\n  ]);\nangular.module('dashing.tabset', [])\n  .directive('tabset', [\n    function() {\n      return {\n        restrict: 'E',\n        templateUrl: 'tabset/tabset.html',\n        transclude: true,\n        scope: true,\n        controller: ['$scope',\n          function($scope) {\n            var tabs = $scope.tabs = [];\n            function select(tab, reload) {\n              angular.forEach(tabs, function(item) {\n                item.selected = item === tab;\n              });\n              if (tab.load !== undefined) {\n                tab.load(reload);\n              }\n            }\n            this.addTab = function(tab) {\n              tabs.push(tab);\n              if (tabs.length === 1) {\n                select(tab);\n              }\n            };\n            $scope.selectTab = function(activeTabIndex, reload) {\n              if (activeTabIndex >= 0 && activeTabIndex < tabs.length) {\n                select(tabs[activeTabIndex], reload);\n              }\n            };\n          }\n        ]\n      };\n    }\n  ])\n.directive('tab', ['$http', '$controller', '$compile',\n  function($http, $controller, $compile) {\n    return {\n      restrict: 'E',\n      require: '^tabset',\n      template: '<div class=\"tab-pane\" ng-class=\"{active:selected}\" ng-transclude></div>',\n      replace: true,\n      transclude: true,\n      link: function(scope, elem, attrs, ctrl) {\n        scope.heading = attrs.heading;\n        scope.loaded = false;\n        scope.load = function(reload) {\n          if (scope.loaded && !reload) {\n            return;\n          }\n          if (attrs.template) {\n            $http.get(attrs.template).then(function(response) {\n              createTemplateScope(response.data);\n            });\n          }\n        };\n        function createTemplateScope(template) {\n          elem.html(template);\n          var templateScope = scope.$new(false);\n          if (attrs.controller) {\n            var scopeController = $controller(attrs.controller, {\n              $scope: templateScope\n            });\n            elem.children().data('$ngController', scopeController);\n          }\n          $compile(elem.contents())(templateScope);\n          scope.loaded = true;\n        }\n        ctrl.addTab(scope);\n      }\n    };\n  }\n]);\nangular.module('dashing.util.array', [])\n.factory('dashing.util.array', function() {\n  return {\n    alignArray: function(array, length, default_) {\n      if (length <= array.length) {\n        return array.slice(0, length);\n      }\n      var result = angular.copy(array);\n      for (var i = result.length; i < length; i++) {\n        result.push(default_);\n      }\n      return result;\n    },\n    repeatArray: function(array, sum) {\n      if (sum <= array.length) {\n        return array.slice(0, sum);\n      }\n      var result = [];\n      for (var i = 0; i < sum; i++) {\n        result.push(array[i % array.length]);\n      }\n      return result;\n    },\n    ensureArray: function(value) {\n      return Array.isArray(value) ? value : [value];\n    }\n  };\n});\nangular.module('dashing.util.color', [])\n.factory('dashing.util.color', function() {\n  return {\n    palette: {\n      blue: 'rgb(0,119,215)',\n      blueishGreen: 'rgb(41,189,181)',\n      orange: 'rgb(255,127,80)',\n      purple: 'rgb(110,119,215)',\n      skyBlue: 'rgb(91,204,246)',\n      darkBlue: 'rgb(102,168,212)',\n      darkGray: 'rgb(92,92,97)',\n      darkPink: 'rgb(212,102,138)',\n      darkRed: 'rgb(212,102,138)',\n      lightBlue: 'rgb(35,183,229)',\n      lightGreen: 'rgb(169,255,150)'\n    },\n    conditionToColor: function(condition) {\n      switch (condition) {\n        case 'good':\n          return '#5cb85c';\n        case 'concern':\n          return '#f0ad4e';\n        case 'danger':\n          return '#d9534f';\n        default:\n          return '#aaa';\n      }\n    },\n    lighter: function(color, level) {\n      return zrender.tool.color.lift(color, level);\n    },\n    alpha: function(color, transparency) {\n      return zrender.tool.color.alpha(color, transparency);\n    }\n  };\n});\nangular.module('dashing.util.text', [])\n.factory('dashing.util.text', function() {\n  return {\n    toHumanReadableNumber: function(value, base, digits) {\n      var modifier = '';\n      if (value !== 0) {\n        if (base !== 1024) {\n          base = 1000;\n        }\n        var positive = value > 0;\n        var positiveValue = Math.abs(value);\n        var s = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n        var e = Math.floor(Math.log(positiveValue) / Math.log(base));\n        value = positiveValue / Math.pow(base, e);\n        if (digits > 0 && value !== Math.floor(value)) {\n          value = value.toFixed(digits);\n        }\n        if (!positive) {\n          value *= -1;\n        }\n        modifier = s[e];\n      }\n      return {\n        value: value,\n        modifier: modifier\n      };\n    },\n    toHumanReadableDuration: function(millis, compact) {\n      var x = parseInt(millis, 10);\n      if (isNaN(x)) {\n        return millis;\n      }\n      var units = [{\n        label: ' ms',\n        mod: 1000\n      }, {\n        label: compact ? 's' : ' secs',\n        mod: 60\n      }, {\n        label: compact ? 'm' : ' mins',\n        mod: 60\n      }, {\n        label: compact ? 'h' : ' hours',\n        mod: 24\n      }, {\n        label: compact ? 'd' : ' days',\n        mod: 7\n      }, {\n        label: compact ? 'w' : ' weeks',\n        mod: 52\n      }];\n      var duration = [];\n      for (var i = 0; i < units.length; i++) {\n        var unit = units[i];\n        var t = x % unit.mod;\n        if (t !== 0) {\n          duration.unshift({\n            label: unit.label,\n            value: t\n          });\n        }\n        x = (x - t) / unit.mod;\n      }\n      duration = duration.slice(0, 2);\n      if (duration.length > 1 && duration[1].label === ' ms') {\n        duration = [duration[0]];\n      }\n      return duration.map(function(unit) {\n        return unit.value + unit.label;\n      }).join(compact ? ' ' : ' and ');\n    }\n  };\n});\nangular.module('dashing.util', [\n  'dashing.util.array',\n  'dashing.util.bootstrap',\n  'dashing.util.color',\n  'dashing.util.text',\n  'dashing.util.validation'\n])\n.factory('dashing.util', [\n  'dashing.util.array',\n  'dashing.util.bootstrap',\n  'dashing.util.color',\n  'dashing.util.text',\n  'dashing.util.validation',\n  function(array, bootstrap, color, text, validation) {\n    return {\n      array: array,\n      bootstrap: bootstrap,\n      color: color,\n      text: text,\n      validation: validation\n    };\n  }\n]);\nangular.module('dashing.util.validation', [])\n.factory('dashing.util.validation', function() {\n  var self = {\n    class: function(s) {\n      return /^[a-zA-Z_][a-zA-Z_\\d]*(\\.[a-zA-Z_][a-zA-Z_\\d]*)*$/i.test(s);\n    },\n    integer: function(s) {\n      return /^-?\\d+$/.test(s);\n    },\n    integerInRange: function(s, min, max) {\n      if (self.integer(s)) {\n        s = Number(s);\n        return (isNaN(min) || (s >= min)) && (isNaN(max) || (s <= max));\n      }\n      return false;\n    }\n  };\n  return self;\n});\n})(window, document);"],"sourceRoot":"/source/"}